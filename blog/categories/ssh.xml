<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/blog/categories/ssh.xml" rel="self"/>
    <link href="/"/>
    <updated>2021-10-11T14:01:44+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[ssh proxy jump]]></title>
            <link href="/blog/2021/10/11/ssh-proxy-jump"/>
            <updated>2021-10-11T00:00:00+00:00</updated>
            <id>/blog/2021/10/11/ssh-proxy-jump</id>
            <content type="html"><![CDATA[<h2 id="context">Context</h2>

<p>2 machines:</p>

<ul>
<li>one public, available on internet: <code>bastion-server</code></li>
<li>one private, not available on internet: <code>private-server</code></li>
</ul>

<p>The public machine is allow to connect the private with ssh protocol.</p>

<h2 id="setup-ssh-config">Setup ssh config</h2>

<p>The trick is to make use <code>ProxyJump</code> directive in <code>.ssh/config</code>:</p>

<pre><code>Host bastion-server
    User pi
    Hostname bastion-server.com
    Port 22

Host private-server
    User ben 
    Hostname private-server.com
    ProxyJump bastion-server
</code></pre>

<p>NB: public ssh keys must be added to these 2 servers with <code>ssh-copy-id</code> command for instance.</p>

<h2 id="usage">Usage</h2>

<p>We can now execute remote commands on the private server jumping from the bastion server.</p>

<pre><code>ssh private-server hostname
</code></pre>

<p>You can use that to add your computer @IP to the private server. This can be useful when working with a mobile phone as access point:</p>

<pre><code>IP=$(curl -s ifconfig.me) &amp;&amp; DATE=$(date +%Y-%m-%d_%T) &amp;&amp; echo "adding $IP to ufw at $DATE" &amp;&amp; ssh private-server sudo ufw allow from $IP comment ben-sosh-$DATE &amp;&amp; ssh private-server sudo ufw status numbered
</code></pre>

<h2 id="source">Source</h2>

<p>https://www.syloe.com/rebonds-ssh/</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[SSH key authentication]]></title>
            <link href="/blog/2017/11/06/ssh-key-authentication"/>
            <updated>2017-11-06T00:00:00+00:00</updated>
            <id>/blog/2017/11/06/ssh-key-authentication</id>
            <content type="html"><![CDATA[<p>Access your server using ssh key authentication.</p>

<p>If you loose your time, typing password, this is for you:</p>

<h2 id="generate-ssh-authentication-keys-on-the-client-side">Generate ssh authentication keys on the client side</h2>

<pre><code>ssh-keygen -t rsa
</code></pre>

<h2 id="create-a-.ssh-folder-on-the-server">Create a .ssh folder on the server</h2>

<pre><code>ssh pi@192.168.1.84 mkdir -p .ssh
</code></pre>

<h2 id="grant-the-client-to-access-to-the-server-using-public-key">Grant the client to access to the server using public key</h2>

<pre><code>cat .ssh/id_local.pub | ssh pi@192.168.1.84 'cat &gt;&gt; .ssh/authorized_keys'
</code></pre>

<h2 id="connect-to-server-without-password">Connect to server without password</h2>

<pre><code>ssh pi@192.168.1.84
</code></pre>

<p>That's it, you can now access your server whithout typing your password!</p>
]]></content>
        </entry>
    </feed>