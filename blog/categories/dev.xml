<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/blog/categories/dev.xml" rel="self"/>
    <link href="/"/>
    <updated>2021-03-24T15:54:50+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[PHP 7]]></title>
            <link href="/blog/2021/02/16/php7"/>
            <updated>2021-02-16T00:00:00+00:00</updated>
            <id>/blog/2021/02/16/php7</id>
            <content type="html"><![CDATA[<h1 id="php-7%3A-the-important-stuff">PHP 7: The Important Stuff</h1>

<p>Basic PHP 7 cheat sheet from <a href="https://symfonycasts.com/screencast/php7">symfonycasts</a>.</p>

<h2 id="throwable">Throwable</h2>

<p>Both <code>\Exception</code> and <code>\Error</code> implements <code>\Throwable</code>:</p>

<pre><code>&lt;?php
try {
    undefinedFunction();
} catch (\Throwable $error) {
    echo 'Now if you write bad code, you can catch it! ' . $error-&gt;getMessage();
}
echo "\n\nContinue processing file...";
</code></pre>

<h2 id="scalar-type-hints">Scalar Type Hints</h2>

<p>string, int, float, bool, array, callable, iterable</p>

<pre><code>public function setName(string $name)
</code></pre>

<p>Weak Mode (defaut mode) versus Strict Mode</p>

<pre><code>declare(strict_types = 1);
</code></pre>

<h2 id="return-types">Return Types</h2>

<p>string, int, float, bool, array, callable, iterable</p>

<pre><code>public function getName(): string
</code></pre>

<h2 id="nullable-types">Nullable Types</h2>

<pre><code>public function getFunFact(): ?string
</code></pre>

<h2 id="void-types">Void Types</h2>

<pre><code>public function setFunFact(?string $funFact): void
</code></pre>

<h2 id="private-constants">Private Constants</h2>

<pre><code>private const AVATAR_FILE_PREFIX = '/images';
</code></pre>

<h2 id="the-iterable-pseudo-type">The iterable Pseudo-Type</h2>

<pre><code>public function feed(iterable $food): string
</code></pre>

<h2 id="the-multi-exception-catch">The Multi Exception Catch</h2>

<pre><code>    try {
        if (random_int(0, 1)) {
            throw new NoCookieForYou();
        }
        throw new NoCookiesLeft();
    } catch (NoCookieForYou | NoCookiesLeft $e) {
        $whisper = sprintf('Crazy Dave whispered "%s"', $e-&gt;getMessage());
    }
</code></pre>

<h2 id="spaceship-operator-">spaceship operator &lt;=></h2>

<p>It returns -1, 0 or 1 when first expression is respectively less than, equal to, or greater than second expression.</p>

<pre><code>print( 1 &lt;=&gt; 1);print("&lt;br/&gt;");
print( 1 &lt;=&gt; 2);print("&lt;br/&gt;");
print( 2 &lt;=&gt; 1);print("&lt;br/&gt;");
</code></pre>

<p><a href="https://www.tutorialspoint.com/php7/php7_spaceship_operator.htm">source</a></p>

<h2 id="null-coalescing-operator-%3F%3F">Null Coalescing Operator ??</h2>

<pre><code>$username = $_GET['username'] ?? 'not passed';
</code></pre>

<p>Equivalent code using ternary operator:</p>

<pre><code>$username = isset($_GET['username']) ? $_GET['username'] : 'not passed';
</code></pre>

<p><a href="https://www.tutorialspoint.com/php7/php7_coalescing_operator.htm">Source</a></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[rpi dev 6 - setup ssmpt with netcourrier]]></title>
            <link href="/blog/2020/04/01/rpi-dev-6-ssmtp"/>
            <updated>2020-04-01T00:00:00+00:00</updated>
            <id>/blog/2020/04/01/rpi-dev-6-ssmtp</id>
            <content type="html"><![CDATA[<h2 id="install">install</h2>

<pre><code>apt-get install ssmtp
apt-get install mailutils
</code></pre>

<h2 id="configure">configure</h2>

<p>edit <code>/etc/ssmtp/ssmtp.conf</code>:</p>

<pre><code>root=
mailhub=mail.net-c.com:465
hostname=myhost.com
AuthUser=usermail@netc.fr
AuthPass=ENTER-SMTP-PASSWORD-HERE
FromLineOverride=YES
UseTLS=YES
</code></pre>

<h2 id="test">Test</h2>

<p>echo "Hello world email body" | mail -s "Test Subject" test@mail.fr</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[rpi dev 4 - get let&#039;s encrypt certificates with certbot]]></title>
            <link href="/blog/2020/04/01/rpi-dev-4-lets-encrypt-certificates"/>
            <updated>2020-04-01T00:00:00+00:00</updated>
            <id>/blog/2020/04/01/rpi-dev-4-lets-encrypt-certificates</id>
            <content type="html"><![CDATA[<h2 id="usage">Usage</h2>

<pre><code>apt-get install -y certbot python-certbot-apache

certbot certonly --webroot --webroot-path /var/www/html --domain mydomain.com --email me@mail.com
</code></pre>

<h3 id="renewal">Renewal</h3>

<pre><code>certbot renew --dry-run
</code></pre>

<p>if fails because of FW:</p>

<pre><code>ufw allow 80/tcp comment 'allow IN 80 temporary'
ufw allow 443/tcp comment 'allow IN 443 temporary'

certbot renew --dry-run #launch renewal again

ufw delete allow 80/tcp &amp;&amp; ufw delete allow 443/tcp
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[rpi dev 3 - Install GITEA]]></title>
            <link href="/blog/2020/04/01/rpi-dev-3-gitea"/>
            <updated>2020-04-01T00:00:00+00:00</updated>
            <id>/blog/2020/04/01/rpi-dev-3-gitea</id>
            <content type="html"><![CDATA[<h2 id="git-itself">GIT itself</h2>

<pre><code>apt-get install git
adduser --disabled-login --gecos 'Gitea' git
</code></pre>

<h3 id="gitea-app">GITEA app</h3>

<pre><code>cd /mnt/gitea/
wget https://dl.gitea.io/gitea/1.4.0/gitea-1.4.0-linux-arm-7 -O gitea
chmod +x gitea
chown -R git: /mnt/gitea
</code></pre>

<p>check its running at https://192.X.X.X:3000 with : <code>./gitea web</code></p>

<h4 id="gitea-systemd-service">GITEA systemd service</h4>

<p>In <code>/etc/systemd/system/gitea.service</code>:</p>

<pre><code>[Unit]
Description=Gitea (Git with a cup of tea)
After=syslog.target
After=network.target

[Service]
# Modify these two values ​​and uncomment them if you have
# repos with lots of files and get to HTTP error 500 because of that
###
# LimitMEMLOCK=infinity
# LimitNOFILE=65535
RestartSec=2s
Type=simple
User=git
Group=git
WorkingDirectory=/mnt/gitea
ExecStart=/mnt/gitea/gitea web
Restart=always
Environment=USER=git 
HOME=/mnt/gitea/gitea

[Install]
WantedBy=multi-user.target
</code></pre>

<p>enable service:</p>

<pre><code>systemctl enable gitea.service
systemctl start gitea.service
</code></pre>

<p>reboot and check service is running.</p>

<h3 id="apache2">Apache2</h3>

<pre><code>apt-get install -y apache2
a2enmod ssl rewrite actions alias proxy_fcgi proxy proxy_http
</code></pre>

<h3 id="postgresql">PostgreSQL</h3>

<pre><code>CREATE DATABASE gitea;
CREATE USER gitea_user WITH ENCRYPTED PASSWORD 'pass123';    
GRANT CONNECT ON DATABASE gitea TO gitea_user;
\c gitea;
GRANT USAGE ON SCHEMA public TO gitea_user;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO gitea_user;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO gitea_user;
</code></pre>

<h3 id="setup-apache2-reverse-proxy">Setup Apache2 reverse proxy</h3>

<pre><code>a2enmod proxy
a2enmod proxy_http
</code></pre>

<p>Configure reverse proxy directives <a href="https://www.digitalocean.com/community/questions/how-do-i-setup-gitea-with-a-domain-name-or-sub-domain">source</a> :</p>

<pre><code>ProxyPreserveHost On
ProxyRequests off
ProxyPass / http://localhost:3000/
ProxyPassReverse / http://localhost:3000/
</code></pre>

<p><code>gitea.com.conf</code> file:</p>

<pre><code>&lt;VirtualHost *:80&gt;
    ServerName mygitea.com
    Redirect permanent / https://mygitea.com
&lt;/VirtualHost&gt;

&lt;VirtualHost *:443&gt;
    ServerName mygitea.com
    ProxyPreserveHost On
    ProxyRequests off
    ProxyPass / http://localhost:3000/
    ProxyPassReverse / http://localhost:3000/

    ServerAdmin webmaster@localhost
    DocumentRoot /var/www/html
    SSLengine on
    SSLCertificateKeyFile /etc/letsencrypt/live/mygitea.com/privkey.pem
    SSLCertificateFile    /etc/letsencrypt/live/mygitea.com/cert.pem
    SSLCertificateChainFile /etc/letsencrypt/live/mygitea.com/fullchain.pem

    ErrorLog ${APACHE_LOG_DIR}/gitea-error.log
    CustomLog ${APACHE_LOG_DIR}/gitea-access.log combined
    Include conf-available/serve-cgi-bin.conf
&lt;/VirtualHost&gt;
</code></pre>

<h3 id="configuration">Configuration</h3>

<h3 id="from-gui">from GUI</h3>

<ul>
<li>disable registration form</li>
<li>mark repo as private</li>
</ul>

<h3 id="from-cli">from CLI</h3>

<p>edit <code>custom/conf/app.ini</code> and <code>systemctl restart gitea.service</code></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[rpi dev 2 - extend RPI storage with a USB drive]]></title>
            <link href="/blog/2020/04/01/rpi-dev-2-extend-fs"/>
            <updated>2020-04-01T00:00:00+00:00</updated>
            <id>/blog/2020/04/01/rpi-dev-2-extend-fs</id>
            <content type="html"><![CDATA[<h2 id="purpose">purpose</h2>

<p>create 3 partitions of 8Go for :</p>

<ul>
<li>/var/www</li>
<li>/mnt/gitea</li>
<li>/var/lib/postgresql/</li>
</ul>

<h3 id="create-3-partitions-on-the-usb-drive-of-8go">Create 3 partitions on the USB drive of 8Go</h3>

<pre><code>root@raspberrypi:~# fdisk /dev/sda
</code></pre>

<p>=></p>

<pre><code>Command (m for help): o
Created a new DOS disklabel with disk identifier 0x78494e0c.

Command (m for help): n
Partition type
   p   primary (0 primary, 0 extended, 4 free)
   e   extended (container for logical partitions)
Select (default p): p
Partition number (1-4, default 1): 1
First sector (2048-60063743, default 2048): 
Last sector, +/-sectors or +/-size{K,M,G,T,P} (2048-60063743, default 60063743): +8G

Created a new partition 1 of type 'Linux' and of size 8 GiB.

Command (m for help): n
Partition type
   p   primary (1 primary, 0 extended, 3 free)
   e   extended (container for logical partitions)
Select (default p): p
Partition number (2-4, default 2): 2
First sector (16779264-60063743, default 16779264): 
Last sector, +/-sectors or +/-size{K,M,G,T,P} (16779264-60063743, default 60063743): +8G

Created a new partition 2 of type 'Linux' and of size 8 GiB.

Command (m for help): n
Partition type
   p   primary (2 primary, 0 extended, 2 free)
   e   extended (container for logical partitions)
Select (default p): p
Partition number (3,4, default 3): 
First sector (33556480-60063743, default 33556480): 
Last sector, +/-sectors or +/-size{K,M,G,T,P} (33556480-60063743, default 60063743): +8G

Created a new partition 3 of type 'Linux' and of size 8 GiB.

Command (m for help): w
The partition table has been altered.
Calling ioctl() to re-read partition table.
Syncing disks.
</code></pre>

<h3 id="check">Check</h3>

<pre><code>root@raspberrypi:~# fdisk -l /dev/sda
</code></pre>

<p>=></p>

<pre><code>Disk /dev/sda: 28.7 GiB, 30752636928 bytes, 60063744 sectors
Disk model: Ultra           
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x78494e0c

Device     Boot    Start      End  Sectors Size Id Type
/dev/sda1           2048 16779263 16777216   8G 83 Linux
/dev/sda2       16779264 33556479 16777216   8G 83 Linux
/dev/sda3       33556480 50333695 16777216   8G 83 Linux
</code></pre>

<h3 id="create-ext4-filesystem-for-each-partitions-with-explicit-labels">create ext4 filesystem for each partitions with explicit labels</h3>

<pre><code>mkfs.ext4 -L pi-git /dev/sda1
mkfs.ext4 -L pi-web /dev/sda2
mkfs.ext4 -L pi-pgsql /dev/sda3
</code></pre>

<h2 id="check">Check</h2>

<pre><code>root@raspberrypi:~# ls -l /dev/disk/by-label/
</code></pre>

<p>=></p>

<pre><code>total 0
lrwxrwxrwx 1 root root 15 Apr 28 18:17 boot -&gt; ../../mmcblk0p1
lrwxrwxrwx 1 root root 10 Apr 29 11:02 pi-git -&gt; ../../sda1
lrwxrwxrwx 1 root root 10 Apr 29 11:05 pi-pgsql -&gt; ../../sda3
lrwxrwxrwx 1 root root 10 Apr 29 11:05 pi-web -&gt; ../../sda2
lrwxrwxrwx 1 root root 15 Apr 28 18:17 rootfs -&gt; ../../mmcblk0p2
</code></pre>

<h2 id="mount">Mount</h2>

<pre><code>mkdir -p /var/www
mkdir -p /mnt/gitea
mkdir -p /var/lib/postgresql/
</code></pre>

<p>add to `/etc/fstab. <a href="https://debian-facile.org/doc:systeme:fstab">see fstab resource</a>:</p>

<pre><code>LABEL=pi-git  /mnt/gitea                ext4    defaults  0       2
LABEL=pi-web  /var/www                  ext4    defaults  0       2
LABEL=pi-pgsql  /var/lib/postgresql         ext4    defaults  0       2
</code></pre>

<p>mount:</p>

<pre><code>mount -a
</code></pre>

<p>check:</p>

<pre><code>root@raspberrypi:~#  df -h
</code></pre>

<p>=></p>

<pre><code>Filesystem      Size  Used Avail Use% Mounted on
/dev/root        15G  1.3G   13G  10% /
devtmpfs        459M     0  459M   0% /dev
tmpfs           464M     0  464M   0% /dev/shm
tmpfs           464M  6.3M  457M   2% /run
tmpfs           5.0M  4.0K  5.0M   1% /run/lock
tmpfs           464M     0  464M   0% /sys/fs/cgroup
/dev/mmcblk0p1  253M   53M  200M  21% /boot
tmpfs            93M     0   93M   0% /run/user/1000
/dev/sda1       7.9G   36M  7.4G   1% /mnt/gitea
/dev/sda2       7.9G   36M  7.4G   1% /var/www
/dev/sda3       7.9G   36M  7.4G   1% /var/lib/postgresql
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[rpi dev 1 - Setup a development server with a RPI 3]]></title>
            <link href="/blog/2020/04/01/rpi-dev-1-summary"/>
            <updated>2020-04-01T00:00:00+00:00</updated>
            <id>/blog/2020/04/01/rpi-dev-1-summary</id>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>

<ul>
<li>install <a href="https://www.raspberrypi.org/downloads/raspbian/">Raspbian Buster Lite</a>: <code>dd if=2020-02-13-raspbian-buster-lite.img of=/dev/mmcblk0</code></li>
<li>setup minimal configuration: from <code>raspi-config</code>, set <code>locale</code>, <code>keyboard layout</code>, <code>timezone</code>, <code>wifi-country</code> </li>
<li>update it : <code>apt update &amp;&amp; apt upgrade</code></li>
<li><a href="https://www.raspberrypi.org/documentation/configuration/security.md">secure your RPI</a>: create admin user, remove default pi user, setup ssh</li>
<li>fix your RPI private @IP: in my case, I do this in the admin section of my router</li>
<li>buy a domain name from a registrar</li>
<li>edit your DNS zone from your registrar to add <code>A record</code> that will link your domain name and your router public @IP</li>
<li>edit your router DMZ section to redirect incoming traffic to your device, here the RPI. You can make use of NAT rules too and port redirections</li>
<li><a href="/blog/2020/04/01/rpi-dev-2-extend-fs">extend RPI File system</a> </li>
<li><a href="/blog/2020/04/01/rpi-dev-3-gitea">install a GITHUB like app, gitea</a> </li>
<li><a href="/blog/2020/04/01/rpi-dev-4-lets-encrypt-certificates">get SSL certificates from let's encrypt</a></li>
<li><a href="/blog/2020/04/01/rpi-dev-5-ufw">secure it with firewall rules</a></li>
<li><a href="/blog/2020/04/01/rpi-dev-6-ssmtp">setup smtp</a></li>
<li><a href="/blog/2020/04/01/rpi-dev-7-system-logs">check logs</a></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PHP survival sheet]]></title>
            <link href="/blog/2019/07/12/php-survival-sheet"/>
            <updated>2019-07-12T00:00:00+00:00</updated>
            <id>/blog/2019/07/12/php-survival-sheet</id>
            <content type="html"><![CDATA[<h2 id="identify-different-%60php.ini%60-files">Identify different <code>php.ini</code> files</h2>

<p>This <code>find</code> command:</p>

<pre><code>find /etc -name php.ini 
</code></pre>

<p>returns:</p>

<pre><code>/etc/php/7.1/apache2/php.ini
/etc/php/7.1/cli/php.ini
</code></pre>

<h2 id="identify-loaded-php.ini-files-from-command-line">Identify loaded php.ini files from command line</h2>

<p>This command:</p>

<pre><code>php --ini
</code></pre>

<p>returns:</p>

<pre><code>Configuration File (php.ini) Path: /etc/php/7.1/cli
Loaded Configuration File:         /etc/php/7.1/cli/php.ini
Scan for additional .ini files in: /etc/php/7.1/cli/conf.d
Additional .ini files parsed:      /etc/php/7.1/cli/conf.d/10-mysqlnd.ini,
/etc/php/7.1/cli/conf.d/10-opcache.ini,
/etc/php/7.1/cli/conf.d/10-pdo.ini,
/etc/php/7.1/cli/conf.d/15-xml.ini,
...
</code></pre>

<h2 id="get-configuration-values-from-the-command-line">Get configuration values from the command line</h2>

<p>This command returns:</p>

<pre><code>php -i | grep upload_max_filesize
</code></pre>

<p>returns:</p>

<pre><code>upload_max_filesize =&gt; 2M =&gt; 2M
</code></pre>

<p>Common configuration to change in <code>php.ini</code> files:</p>

<pre><code>memory_limit
max_execution_time
max_input_time
post_max_size
upload_max_filesize

display_errors
html_errors
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Use your own fork with composer]]></title>
            <link href="/blog/2019/07/10/use-your-own-fork-with-composer"/>
            <updated>2019-07-10T00:00:00+00:00</updated>
            <id>/blog/2019/07/10/use-your-own-fork-with-composer</id>
            <content type="html"><![CDATA[<p>Resources:</p>

<ul>
<li>https://getcomposer.org/doc/04-schema.md#minimum-stability</li>
<li>https://stackoverflow.com/a/13500676/1632809</li>
</ul>

<h2 id="context">Context</h2>

<ul>
<li><p>Original project: <a href="https://github.com/KnpLabs/KnpGaufretteBundle">https://github.com/KnpLabs/KnpGaufretteBundle</a></p></li>
<li><p>My fork: <a href="https://github.com/benIT/KnpGaufretteBundle.git">https://github.com/benIT/KnpGaufretteBundle.git</a></p></li>
<li><p>My branch name: <code>benIT-gaufrette-1.0</code>. This one contains my commits.</p></li>
</ul>

<h2 id="composer">Composer</h2>

<p>My <code>composer.json</code> file that tracks my fork with ly branch.</p>

<p>Note: branch must be prefixed bt <code>dev-</code>. In this case: <code>dev-benIT-gaufrette-1.0</code>:</p>

<pre><code>{
  "name": "root/test-composer",
  "repositories": [
    {
      "type": "vcs",
      "url": "https://github.com/benIT/KnpGaufretteBundle.git"
    }
  ],
  "require": {
    "knplabs/knp-gaufrette-bundle": "dev-benIT-gaufrette-1.0"
  },
  "minimum-stability": "dev",
  "prefer-stable": true
}
</code></pre>

<p>The following directive :</p>

<pre><code>"minimum-stability": "dev",
"prefer-stable": true
</code></pre>

<p>prevents this kind of error related to minimum stability:</p>

<pre><code>  Problem 1
    - Installation request for knplabs/knp-gaufrette-bundle dev-benIT-gaufrette-1.0 -&gt; satisfiable by knplabs/knp-gaufrette-bundle[dev-benIT-gaufrette-1.0].
    - knplabs/knp-gaufrette-bundle dev-benIT-gaufrette-1.0 requires knplabs/gaufrette ^1.0 -&gt; satisfiable by knplabs/gaufrette[1.x-dev] but these conflict with your requirements or minimum-stability.
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Moodle migration procedure]]></title>
            <link href="/blog/2017/06/15/moodle-migration-procedure."/>
            <updated>2017-06-15T00:00:00+00:00</updated>
            <id>/blog/2017/06/15/moodle-migration-procedure.</id>
            <content type="html"><![CDATA[<p>In this post is described how to export you moodle app and import it on another environment.</p>

<h2 id="export-from-the-source-database">Export from the source database</h2>

<pre><code>     sudo -u postgres pg_dump moodle &gt; /vagrant/shared/dump/moodle-database-exported.sql
</code></pre>

<h2 id="migrate-database">Migrate database</h2>

<p>Here I sustitute the string 'moodle-dev' by 'moodle-deploy' from 'moodle-database-exported.sql' and write it to 'database-to-import.sql':</p>

<pre><code>     sed 's/moodle-dev/moodle-deploy/g' moodle-database-exported.sql &gt; database-to-import.sql
</code></pre>

<h2 id="let%27s-tar-db-and-filesystem">Let's tar db and filesystem</h2>

<pre><code>    tar -cvzf moodle-to-import.tgz database-to-import.sql moodle moodledata/
    exit
    mv ~/vagrant/vagrant-moodle/shared/moodle-to-import.tgz ~/vagrant/vagrant-moodle-deploy/shared/
</code></pre>

<h2 id="cleanup-the-target-machine">Cleanup the target machine</h2>

<p>Connect on the target machine. here target database is also named 'moodle':</p>

<pre><code>     cd /vagrant/shared
     rm -rf moodle moodledata/
     sudo -u postgres psql -c "DROP DATABASE moodle"
     sudo -u postgres psql -c "CREATE DATABASE moodle"
</code></pre>

<h2 id="import-db-and-filesystem-on-the-target-database">Import db and filesystem on the target database</h2>

<pre><code>    sudo tar -xzf moodle-to-import.tgz
    sudo -u postgres psql --set ON_ERROR_STOP=on moodle &lt; database-to-import.sql
</code></pre>

<h2 id="migrate-the-config.php-file">Migrate the config.php file</h2>

<pre><code>    sed -i 's/moodle-dev/moodle-deploy/g' moodle/config.php
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Configure xdebug with phpstorm with a vagrant box]]></title>
            <link href="/blog/2017/06/15/setup-xdebug-phpstorm-vagrant"/>
            <updated>2017-06-15T00:00:00+00:00</updated>
            <id>/blog/2017/06/15/setup-xdebug-phpstorm-vagrant</id>
            <content type="html"><![CDATA[<p>After loosing a few hours reconfiguring xdebug, phpstorm and vagrant, I found this <a href="https://www.theodo.fr/blog/2016/08/configure-xdebug-phpstorm-vagrant/">great ressource</a>. Here are my notes about it:</p>

<p><em>phpstorm is installed on the hostmachine and the app is running in a vagrant box.</em></p>

<h2 id="vagrant-guest-machine-setup">Vagrant guest machine setup</h2>

<pre><code>sudo apt-get install php5-xdebug
</code></pre>

<p>Edit <code>/etc/php5/mods-available/xdebug.ini</code> :</p>

<pre><code>xdebug.remote_enable=true
xdebug.remote_connect_back=true
xdebug.idekey=MY_AWESOME_KEY
</code></pre>

<h2 id="phpstorm-setup">Phpstorm setup</h2>

<h3 id="setup-%27php-remote-debug%27-configuration">Setup 'php remote debug' configuration</h3>

<p><img src="/images/xdebug/storm-xdebug-vagrant-1-remote-debug-conf.png" alt="screenshot" /></p>

<h3 id="setup-%27server%27-configuration">Setup 'server' configuration</h3>

<p><img src="/images/xdebug/storm-xdebug-vagrant-2-server-conf.png" alt="screenshot" /></p>

<h2 id="browser-plugin">Browser plugin</h2>

<ul>
<li>install a browser <a href="https://addons.mozilla.org/en-US/firefox/addon/the-easiest-xdebug/">plugin such as this one</a></li>
<li>configure the ide key, here: <code>MY_AWESOME_KEY</code></li>
<li>it is also possible to use <a href="https://www.jetbrains.com/phpstorm/marklets/">bookmarklets</a> </li>
</ul>

<h2 id="enjoy%21">Enjoy!</h2>

<ul>
<li>Puts breakpoints </li>
<li>Enable cookie using web browser extension or bookmarklet
<img src="/images/xdebug/storm-xdebug-vagrant-3-breakpoints.png" alt="screenshot" /></li>
<li>Click on the bug icon called 'debug mode'</li>
<li>You can now enjoy the debugger (inspect variables, control the execution flow)
<img src="/images/xdebug/storm-xdebug-vagrant-4-debugger-running.png" alt="screenshot" /></li>
</ul>
]]></content>
        </entry>
    </feed>