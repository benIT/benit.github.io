<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/blog/categories/survival sheet.xml" rel="self"/>
    <link href="/"/>
    <updated>2021-05-07T12:01:31+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[PHP survival sheet]]></title>
            <link href="/blog/2019/07/12/php-survival-sheet"/>
            <updated>2019-07-12T00:00:00+00:00</updated>
            <id>/blog/2019/07/12/php-survival-sheet</id>
            <content type="html"><![CDATA[<h2 id="identify-different-%60php.ini%60-files">Identify different <code>php.ini</code> files</h2>

<p>This <code>find</code> command:</p>

<pre><code>find /etc -name php.ini 
</code></pre>

<p>returns:</p>

<pre><code>/etc/php/7.1/apache2/php.ini
/etc/php/7.1/cli/php.ini
</code></pre>

<h2 id="identify-loaded-php.ini-files-from-command-line">Identify loaded php.ini files from command line</h2>

<p>This command:</p>

<pre><code>php --ini
</code></pre>

<p>returns:</p>

<pre><code>Configuration File (php.ini) Path: /etc/php/7.1/cli
Loaded Configuration File:         /etc/php/7.1/cli/php.ini
Scan for additional .ini files in: /etc/php/7.1/cli/conf.d
Additional .ini files parsed:      /etc/php/7.1/cli/conf.d/10-mysqlnd.ini,
/etc/php/7.1/cli/conf.d/10-opcache.ini,
/etc/php/7.1/cli/conf.d/10-pdo.ini,
/etc/php/7.1/cli/conf.d/15-xml.ini,
...
</code></pre>

<h2 id="get-configuration-values-from-the-command-line">Get configuration values from the command line</h2>

<p>This command returns:</p>

<pre><code>php -i | grep upload_max_filesize
</code></pre>

<p>returns:</p>

<pre><code>upload_max_filesize =&gt; 2M =&gt; 2M
</code></pre>

<p>Common configuration to change in <code>php.ini</code> files:</p>

<pre><code>memory_limit
max_execution_time
max_input_time
post_max_size
upload_max_filesize

display_errors
html_errors
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Nginx survival sheet]]></title>
            <link href="/blog/2017/10/16/nginx-survival-sheet"/>
            <updated>2017-10-16T00:00:00+00:00</updated>
            <id>/blog/2017/10/16/nginx-survival-sheet</id>
            <content type="html"><![CDATA[<p>In this post, the most common Nginx commands that I use are listed. This is not really interesting but I'm bored of asking google for it every week!</p>

<p><a href="https://www.geek17.com/fr/content/debian-9-stretch-installer-et-configurer-la-derniere-version-de-nginx-et-php-7-fpm-63">source</a></p>

<pre><code>sudo apt-get install -y nginx

sudo apt-get install -y php7.0-fpm

sudo apt-get install -y php7.0-gd php7.0-mysql php7.0-cli php7.0-common php7.0-curl php7.0-opcache php7.0-json php7.0-imap php7.0-mbstring php7.0-xml php7-pgsql php7.0-sqlite
</code></pre>

<h2 id="vagrant-tips-for-dev-env">Vagrant tips for dev env</h2>

<p>In the following files change <code>www-data</code> to <code>vagrant</code>:</p>

<ul>
<li>/etc/php/7.0/fpm/php-fpm.conf</li>
<li>/etc/php/7.0/fpm/pool.d/www.conf</li>
</ul>

<h2 id="restart-services">Restart services</h2>

<pre><code>sudo service nginx restart &amp;&amp; sudo service php7.0-fpm restart
</code></pre>

<h2 id="vhost">Vhost</h2>

<h3 id="create-a-vhost-file">Create a vhost file</h3>

<p>In <code>/etc/nginx/sites-available/default</code> file:</p>

<pre><code>server {
    listen 80;
    listen [::]:80;
    server_name www.massonweb.fr;
    # enforce https
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name massonweb.fr;

    ssl_certificate /etc/letsencrypt/live/massonweb.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/massonweb.fr/privkey.pem;

    root /var/www/html;

    index index.php index.html;

    access_log /var/log/nginx/default-access_log;
    error_log /var/log/nginx/default-error_log;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_index index.php;
        fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include /etc/nginx/fastcgi_params;
    }
}
</code></pre>

<h3 id="enable--vhost">Enable  vhost</h3>

<pre><code>sudo ln -s /etc/nginx/sites-available/default  /etc/nginx/sites-enabled/default    
sudo service nginx restart
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Apache2 survival sheet]]></title>
            <link href="/blog/2017/10/02/apache2-survival-sheet"/>
            <updated>2017-10-02T00:00:00+00:00</updated>
            <id>/blog/2017/10/02/apache2-survival-sheet</id>
            <content type="html"><![CDATA[<h2 id="virtual-hosts">Virtual hosts</h2>

<p>Virtual hosts allow to run several sites on the same server.</p>

<h3 id="several-sites-on-the-same-machine">Several sites on the same machine</h3>

<p>Make use of the <code>ServerName</code> directive to match the right site.</p>

<p>In <code>/etc/apache2/sites-enabled/foo.conf</code>:</p>

<pre><code>    &lt;VirtualHost *:80&gt; 
            ServerName foo.local
            ServerAdmin webmaster@localhost
            DocumentRoot /home/pi/projects/foo/
            ErrorLog /foo.log
            CustomLog /access-foo.log combined
    &lt;/VirtualHost&gt;
</code></pre>

<p>In <code>/etc/apache2/sites-enabled/bar.conf</code>:</p>

<pre><code>    &lt;VirtualHost *:80&gt; 
            ServerName bar.local
            ServerAdmin webmaster@localhost
            DocumentRoot /home/pi/projects/bar/
            ErrorLog /bar.log
            CustomLog /access-bar.log combined
    &lt;/VirtualHost&gt; 
</code></pre>

<p>When an http request corresponding to the <code>ServerName</code> value is received, the right answer is served according to the vhost.conf.</p>

<h3 id="enable-a-vhost">Enable a vhost</h3>

<pre><code>a2ensite video-app
</code></pre>

<h3 id="disable--a-vhost">Disable  a vhost</h3>

<pre><code>a2dissite video-app
</code></pre>

<h2 id="modules">Modules</h2>

<h3 id="list-enables%2Floaded-modules">List enables/loaded modules</h3>

<pre><code>apache2ctl -M
</code></pre>

<h3 id="enable-a-module">Enable a module</h3>

<pre><code>sudo a2enmod rewrite
</code></pre>

<h2 id="server-status">Server status</h2>

<pre><code>apache2ctl status
</code></pre>

<h2 id="security">Security</h2>

<h3 id="hide-server-version">Hide server version</h3>

<p>In <code>/etc/apache2/conf-available/security.conf</code>:</p>

<pre><code>ServerTokens Prod
ServerSignature Off
</code></pre>

<h3 id="prevent-site-encapsulation-in-an-external-iframe">Prevent site encapsulation in an external iframe</h3>

<p>In <code>/etc/apache2/conf-available/security.conf</code>:</p>

<pre><code>Leader set X-Frame-Options: "sameorigin" 
</code></pre>

<h3 id="secure-a-vhost-with-a-basic-authentication">Secure a vhost with a basic authentication</h3>

<p>install utils:</p>

<pre><code>apt-get install apache2 apache2-utils
</code></pre>

<p>Generate password for user ben:</p>

<pre><code>htpasswd -c /etc/apache2/.htpasswd ben

cat /etc/apache2/.htpasswd
</code></pre>

<p>output:</p>

<pre><code> ben:$apr1$ULdWsbYp$eawlgBJZvKhr7L8V1NWGD/
</code></pre>

<p>Secure your vhost:</p>

<pre><code>    LISTEN 10000 
    &lt;VirtualHost *:10000&gt; 
            ServerAdmin webmaster@localhost
            DocumentRoot /home/pi/projects/videoapp/web/
             &lt;Directory /home/pi/projects/videoapp&gt;
                    Options Indexes FollowSymLinks
                    AllowOverride All
                    AuthType Basic
                    AuthName "Restricted Content"
                    AuthUserFile /etc/apache2/.htpasswd
                    Require valid-user
            &lt;/Directory&gt;
            ErrorLog /error-videoapp.log
            CustomLog /access-videoapp.log combined
    &lt;/VirtualHost&gt;
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[PostgreSQL survival sheet]]></title>
            <link href="/blog/2017/09/28/postgresql-survival-sheet"/>
            <updated>2017-09-28T00:00:00+00:00</updated>
            <id>/blog/2017/09/28/postgresql-survival-sheet</id>
            <content type="html"><![CDATA[<p>In this post, the most common pgsql commands that I use are listed. This is not really interesting but I'm bored of asking google for it every week!</p>

<h2 id="start-psql-command-line-utility">Start psql command line utility</h2>

<p>Using the <code>postgres</code> superuser:</p>

<pre><code>sudo -u postgres psql
</code></pre>

<h2 id="exit">Exit</h2>

<pre><code>postgres=# \q
</code></pre>

<h2 id="list-databases">List databases</h2>

<pre><code>postgres=# \l+
</code></pre>

<p>output:</p>

<pre><code>                                                                    List of databases
    Name    |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileges   |  Size   | Tablespace |                Description                 
------------+----------+----------+-------------+-------------+-----------------------+---------+------------+--------------------------------------------
 clipbucket | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |                       | 6532 kB | pg_default | 
 moodle     | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |                       | 6532 kB | pg_default | 
 postgres   | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |                       | 6532 kB | pg_default | default administrative connection database
 template0  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +| 6409 kB | pg_default | unmodifiable empty database
            |          |          |             |             | postgres=CTc/postgres |         |            | 
 template1  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +| 6532 kB | pg_default | default template for new databases
            |          |          |             |             | postgres=CTc/postgres |         |            | 
 testdb     | testdb   | UTF8     | en_US.UTF-8 | en_US.UTF-8 |                       | 6724 kB | pg_default | 
 videoapp   | videoapp | UTF8     | en_US.UTF-8 | en_US.UTF-8 |                       | 6724 kB | pg_default | 
(7 rows)
</code></pre>

<h2 id="drop-database">Drop database</h2>

<pre><code>postgres=# DROP DATABASE testdeploy;
</code></pre>

<p>output:</p>

<pre><code>postgres=# DROP DATABASE
</code></pre>

<h2 id="list-users">List users</h2>

<pre><code>postgres=# \du+
</code></pre>

<p>output :</p>

<pre><code>                                   List of roles
   Role name    |                   Attributes                   | Member of | Description 
----------------+------------------------------------------------+-----------+-------------
 clipbucket     |                                                | {}        | 
 manuel         | Create DB                                      | {}        | 
 moodle         |                                                | {}        | 
 postgres       | Superuser, Create role, Create DB, Replication | {}        | 
 testdb         | Create DB                                      | {}        | 
 testdeploy     | Create DB                                      | {}        | 
 testdeploytest | Create DB                                      | {}        | 
 videoapp       | Create DB                                      | {}        | 
</code></pre>

<h2 id="drop-user">Drop user</h2>

<pre><code>postgres=# DROP USER testdeploy;
</code></pre>

<p>output:</p>

<pre><code>DROP ROLE
</code></pre>

<h2 id="create-user">Create user</h2>

<pre><code>postgres=# CREATE USER videoapp WITH PASSWORD 'videoapp' CREATEDB ;
</code></pre>

<p>Note : This user has privilege to create a db.</p>

<p>output:</p>

<pre><code>CREATE ROLE
</code></pre>

<h2 id="list-db-tables">List DB tables</h2>

<h3 id="switch-database">Switch database</h3>

<pre><code>postgres=# \c videoapp
</code></pre>

<p>output:</p>

<pre><code>You are now connected to database "videoapp" as user "postgres".
</code></pre>

<h3 id="list-tables">List tables</h3>

<pre><code>videoapp=# \dt+
</code></pre>

<p>output:</p>

<pre><code>                         List of relations
 Schema |    Name     | Type  |  Owner   |    Size    | Description 
--------+-------------+-------+----------+------------+-------------
 public | fos_user    | table | videoapp | 8192 bytes | 
 public | tag         | table | videoapp | 0 bytes    | 
 public | video       | table | videoapp | 8192 bytes | 
 public | videos_tags | table | videoapp | 0 bytes    | 
(4 rows)
</code></pre>

<h2 id="privileges">Privileges</h2>

<h3 id="connect-as-%60postgres%60-superuser">Connect as <code>postgres</code> superuser</h3>

<pre><code>PGPASSWORD="P@ss0rd" psql -U postgres -h 10.11.12.13 -p 5432
</code></pre>

<h3 id="grant-privileges">Grant Privileges</h3>

<pre><code>GRANT CONNECT ON DATABASE app_database TO app_user;
\c app_database
GRANT USAGE ON SCHEMA public TO app_user;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO app_user;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO app_user;
</code></pre>

<h2 id="config-files">Config files</h2>

<h2 id="determine-which-config-file-is-in-use">Determine which config file is in use</h2>

<pre><code>SHOW config_file ;
</code></pre>

<h2 id="determine-which-hba-file-is-in-use">Determine which hba file is in use</h2>

<pre><code>SHOW hba_file;
</code></pre>

<h2 id="connection">Connection</h2>

<h3 id="remote-connection">Remote connection</h3>

<p>In <code>postgresql.conf</code>:</p>

<pre><code>listen_addresses = '*'
</code></pre>

<p>In <code>pg_hba.conf</code>:</p>

<pre><code>host  all  all 0.0.0.0/0 md5
</code></pre>
]]></content>
        </entry>
    </feed>