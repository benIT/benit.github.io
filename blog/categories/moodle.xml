<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/blog/categories/moodle.xml" rel="self"/>
    <link href="/"/>
    <updated>2021-04-20T12:14:36+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Configure moodle 3.x session handling with memcached]]></title>
            <link href="/blog/2018/01/11/configure-moodle-session-handling-with-memcached"/>
            <updated>2018-01-11T00:00:00+00:00</updated>
            <id>/blog/2018/01/11/configure-moodle-session-handling-with-memcached</id>
            <content type="html"><![CDATA[<p>This procedure has been tested on Moodle <a href="https://github.com/moodle/moodle/commit/7223cd2518ad3b37901b736d6b62e7badd4ecaa1">version 3.0.6+</a> with a dedicated memcached server which @IP:port is 192.168.33.14:11211.</p>

<h2 id="set-up-a--memcached-server">Set up a  memcached server</h2>

<p>see <a href="/blog/2018-01-11-php7-nginx-memcached-session">this post</a>.</p>

<h2 id="configure-moodle">Configure moodle</h2>

<p>Configure <a href="https://docs.moodle.org/30/en/Session_handling#Memcached">session handling</a> in <code>config.php</code>:</p>

<pre><code>/********************************************/
//MEMCACHED SETUP
$CFG-&gt;session_handler_class = '\core\session\memcached';
$CFG-&gt;session_memcached_save_path = '192.168.33.14:11211';
$CFG-&gt;session_memcached_prefix = 'memc.sess.key.';
$CFG-&gt;session_memcached_acquire_lock_timeout = 120;
$CFG-&gt;session_memcached_lock_expire = 7200;       // Ignored if memcached extension &lt;= 2.1.0
/********************************************/
</code></pre>

<h2 id="checkings">Checkings</h2>

<h2 id="moodle-cookie">Moodle cookie</h2>

<p>If you print out your cookie from your debug tool in your bowser, you well see a cookie named <code>MoodleSession</code></p>

<p>In my case it has value <code>4gp94gr17g78jnh97a6mfml0b4</code></p>

<h2 id="moodle-database">Moodle database</h2>

<p>Now let's check if there is still record in DB for your cookie session:</p>

<pre><code>SELECT * FROM mdl_sessions WHERE sid='4gp94gr17g78jnh97a6mfml0b4';
</code></pre>

<p>returns:</p>

<pre><code>2507694 0   4gp94gr17g78jnh97a6mfml0b4  48521       1515679016  1515681908  192.168.33.1    192.168.33.1
</code></pre>

<p>What ??? I was expecting to have no more entries in the mdl_sessions table.
After searching a little bit more, I found the explanation <a href="https://moodle.org/mod/forum/discuss.php?d=326352">here</a>:</p>

<pre><code>Normally when you have sessions stored in Memcache/d there will still be a record of the session written to mdl_sessions. The session data is not written to the database, it's only written to the memcache/d server itself. The performance gain is seen because the session data is not written every page view for every user, and thus the table rows are not continually being locked and unlocked.
</code></pre>

<h2 id="memcached-server">memcached server</h2>

<p>Let's check if there is a key/value record for ou session:</p>

<script src="https://gist.github.com/benIT/2e63d3541f4f46d9a47777d467549d2e.js"></script>

<p>run it:</p>

<pre><code>php memcached.php | grep 4gp94gr17g78jnh97a6mfml0b4
</code></pre>

<p>prints:</p>

<pre><code>key: memc.sess.key.4gp94gr17g78jnh97a6mfml0b4
</code></pre>

<p>which means that our session is written in memcached! That's ok!</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Moodle 3.X: activate debug whithout GUI]]></title>
            <link href="/blog/2017/11/09/moodle-activate-debug-using-sql"/>
            <updated>2017-11-09T00:00:00+00:00</updated>
            <id>/blog/2017/11/09/moodle-activate-debug-using-sql</id>
            <content type="html"><![CDATA[<p>If you need to activate debug but you cannot access moodle admin page, this article is for you:</p>

<h2 id="step-1%3A-note-original-settings">Step 1: note original settings</h2>

<pre><code>SELECT name, value
FROM mdl_config
where name ='debug' or name ='debugdisplay'
;
</code></pre>

<p>for instance :</p>

<pre><code>debug   0
debugdisplay    0
</code></pre>

<h2 id="step-2-%3A-setup-debug-config-in-db">Step 2 : setup debug config in db</h2>

<pre><code>UPDATE mdl_config SET VALUE = 32767 WHERE name = 'debug';
UPDATE mdl_config SET VALUE = 1 WHERE name = 'debugdisplay';
</code></pre>

<h2 id="step-3%3A-clear-cache-from-cli">Step 3: clear cache from CLI</h2>

<pre><code>php  moodle/admin/cli/purge_caches.php
</code></pre>

<h2 id="step-4%3A-restore-original-settings">Step 4: restore original settings</h2>

<pre><code>UPDATE mdl_config SET VALUE = 0 WHERE name = 'debug';
UPDATE mdl_config SET VALUE = 0 WHERE name = 'debugdisplay';
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Moodle migration procedure]]></title>
            <link href="/blog/2017/06/15/moodle-migration-procedure."/>
            <updated>2017-06-15T00:00:00+00:00</updated>
            <id>/blog/2017/06/15/moodle-migration-procedure.</id>
            <content type="html"><![CDATA[<p>In this post is described how to export you moodle app and import it on another environment.</p>

<h2 id="export-from-the-source-database">Export from the source database</h2>

<pre><code>     sudo -u postgres pg_dump moodle &gt; /vagrant/shared/dump/moodle-database-exported.sql
</code></pre>

<h2 id="migrate-database">Migrate database</h2>

<p>Here I sustitute the string 'moodle-dev' by 'moodle-deploy' from 'moodle-database-exported.sql' and write it to 'database-to-import.sql':</p>

<pre><code>     sed 's/moodle-dev/moodle-deploy/g' moodle-database-exported.sql &gt; database-to-import.sql
</code></pre>

<h2 id="let%27s-tar-db-and-filesystem">Let's tar db and filesystem</h2>

<pre><code>    tar -cvzf moodle-to-import.tgz database-to-import.sql moodle moodledata/
    exit
    mv ~/vagrant/vagrant-moodle/shared/moodle-to-import.tgz ~/vagrant/vagrant-moodle-deploy/shared/
</code></pre>

<h2 id="cleanup-the-target-machine">Cleanup the target machine</h2>

<p>Connect on the target machine. here target database is also named 'moodle':</p>

<pre><code>     cd /vagrant/shared
     rm -rf moodle moodledata/
     sudo -u postgres psql -c "DROP DATABASE moodle"
     sudo -u postgres psql -c "CREATE DATABASE moodle"
</code></pre>

<h2 id="import-db-and-filesystem-on-the-target-database">Import db and filesystem on the target database</h2>

<pre><code>    sudo tar -xzf moodle-to-import.tgz
    sudo -u postgres psql --set ON_ERROR_STOP=on moodle &lt; database-to-import.sql
</code></pre>

<h2 id="migrate-the-config.php-file">Migrate the config.php file</h2>

<pre><code>    sed -i 's/moodle-dev/moodle-deploy/g' moodle/config.php
</code></pre>
]]></content>
        </entry>
    </feed>