<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/blog/categories/GIT.xml" rel="self"/>
    <link href="/"/>
    <updated>2021-10-11T13:54:31+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[GIT rebase]]></title>
            <link href="/blog/2019/03/25/git-rebase"/>
            <updated>2019-03-25T00:00:00+00:00</updated>
            <id>/blog/2019/03/25/git-rebase</id>
            <content type="html"><![CDATA[<p>The aim of this post is to understand and get confortable with the git rebase command.</p>

<p><a href="https://www.atlassian.com/git/tutorials/rewriting-history/git-rebase">Definition</a>:</p>

<blockquote>
  <p>Rebasing is the process of moving or combining a sequence of commits to a new base commit. Rebasing is most useful and easily visualized in the context of a feature branching workflow.</p>
</blockquote>

<h2 id="create-a-git-repo">Create a git repo</h2>

<pre><code>mkdir rebase-test &amp;&amp; cd rebase-test
git init
</code></pre>

<p>output:</p>

<pre><code>Initialized empty Git repository in /home/bmn/rebase-test/.git/
</code></pre>

<h2 id="create-one-commit-on-%60master%60-branch">Create one commit on <code>master</code> branch</h2>

<pre><code>echo "first content from master" &gt;&gt; README.md
git add README.md 
git commit -m "first commit"
</code></pre>

<p>output:</p>

<pre><code>[master (root-commit) dc5f8d2] first commit
1 file changed, 1 insertion(+)
create mode 100644 README.md
</code></pre>

<h2 id="create-a-%60feature%60-branch-from-that-commit">Create a <code>feature</code> branch from that commit</h2>

<pre><code>git checkout -b feature
Switched to a new branch 'feature'
</code></pre>

<h2 id="create-one-commit-on-the-%60feature%60-branch">Create one commit on the <code>feature</code> branch</h2>

<pre><code>echo "introducing a new feature" &gt;&gt; README.md
</code></pre>

<p>Check file:</p>

<pre><code>cat README.md
</code></pre>

<p>output:</p>

<pre><code>first content from master
introducing a new feature


git commit -am "add feature line"
</code></pre>

<p>output:</p>

<pre><code>[feature 2212653] add feature line
1 file changed, 1 insertion(+)
</code></pre>

<h2 id="check-repo-graph">Check repo graph</h2>

<pre><code>nohup gitg &amp;
</code></pre>

<p><img src="/images/git-rebase/graph1.png" alt="screenshot" /></p>

<h2 id="create-a-new-commit-on-master-branch">Create a new commit on master branch</h2>

<pre><code>git checkout master 
Switched to branch 'master'
</code></pre>

<p>Check file:</p>

<pre><code>cat README.md 
first content from master

vim README.md # add a title line for example
cat README.md
</code></pre>

<p>output:</p>

<pre><code># Master title
first content from master
</code></pre>

<p>Commit that:</p>

<pre><code>git commit -am "add master title"
</code></pre>

<p>output:</p>

<pre><code>[master ec82793] add master title
 1 file changed, 1 insertion(+)
</code></pre>

<blockquote>
  <p>Let's say that <code>master</code> branch has a new commit because work on master has been delivered. Let's rebase the <code>feature</code> branch to this new commit, to get the new content from <code>master</code> and play the commit from <code>feature</code> branch.</p>
</blockquote>

<h2 id="let%27s-rebase-the-%60feature%60-branch-on-the-%60master%60-branch">Let's rebase the <code>feature</code> branch on the <code>master</code> branch</h2>

<p>Let's move on our <code>feature</code> branch:</p>

<pre><code>git checkout feature 
</code></pre>

<p>output:</p>

<pre><code>Switched to branch 'feature'
</code></pre>

<p>And now the rebase operation itself:</p>

<pre><code>git rebase -i master 
</code></pre>

<p><img src="/images/git-rebase/rebase.png" alt="screenshot" /></p>

<p>output:</p>

<pre><code>Successfully rebased and updated refs/heads/feature.
</code></pre>

<p><em>Our <code>feature</code> branch starts now from <code>master</code> head commit and now git is replaying all the commit from our <code>feature</code> branch from this point.</em></p>

<p>The result is the following:</p>

<p>The file <code>README.ms</code> now contains the commits from <code>master</code> + the commit from <code>feature</code>.</p>

<h2 id="let%27s-check-feature-branch-content">Let's check feature branch content</h2>

<pre><code>cat README.md 
</code></pre>

<p>output:</p>

<pre><code># Master title
first content from master
introducing a new feature
</code></pre>

<h2 id="let%27s-check-%60master%60-branch-content">Let's check <code>master</code> branch content</h2>

<pre><code>git checkout master 
</code></pre>

<p>output:</p>

<pre><code>Switched to branch 'master'


cat README.md
</code></pre>

<p>output:</p>

<pre><code># Master title
first content from master
</code></pre>

<h2 id="check-repo-graph">Check repo graph</h2>

<pre><code>nohup gitg &amp;
</code></pre>

<p><img src="/images/git-rebase/graph2.png" alt="screenshot" /></p>

<h2 id="usage%3A-getting-changes-from-origin%2Fbranch-on-branch">Usage: getting changes from origin/branch on branch</h2>

<p>Retrieve changes from origin:</p>

<pre><code>git fetch
</code></pre>

<p>apply commit from that:</p>

<pre><code>git checkout master
git rebase origin/master
</code></pre>
]]></content>
        </entry>
    </feed>