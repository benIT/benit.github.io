<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/blog/categories/linux basics.xml" rel="self"/>
    <link href="/"/>
    <updated>2021-05-18T13:18:16+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Clean your git repo with BFG Repo-Cleaner]]></title>
            <link href="/blog/2020/09/16/git-bfg"/>
            <updated>2020-09-16T00:00:00+00:00</updated>
            <id>/blog/2020/09/16/git-bfg</id>
            <content type="html"><![CDATA[<p>Use case : delete the <code>medias</code> from my git repo that contains huge files.</p>

<p>Download bgf.jar from https://rtyley.github.io/bfg-repo-cleaner/</p>

<pre><code>git clone --mirror https://git.mycompany.com/myrepo.git

java -jar ../bfg-1.13.0.jar --delete-folders medias myrepo.git

cd myrepo.git

git reflog expire --expire=now --all &amp;&amp; git gc --prune=now --aggressive

git push
</code></pre>

<p>Size 400Mo -> 30 Mo</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: startup]]></title>
            <link href="/blog/2020/04/17/linux-startup"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-startup</id>
            <content type="html"><![CDATA[<p>init: parent of all ps. PID=0</p>

<p>stages</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: quotas]]></title>
            <link href="/blog/2020/04/17/linux-quotas"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-quotas</id>
            <content type="html"><![CDATA[<h2 id="quotas">quotas</h2>

<p>Quota specifications:</p>

<ul>
<li>number of inode (inode: pointer to file)</li>
<li>number of block</li>
</ul>

<p>Types:</p>

<ul>
<li>hard: block user when quota is reached</li>
<li>soft: inform user that is about to reached the quota</li>
</ul>

<h3 id="install-quotas">install quotas</h3>

<pre><code>apt install quota
</code></pre>

<h3 id="enable-quotas">Enable quotas</h3>

<h4 id="%C2%A0check-config-supports-quota">Â Check config supports quota</h4>

<pre><code>grep QUOTA /boot/config-*
</code></pre>

<p>=></p>

<pre><code>CONFIG_NFT_QUOTA=m
CONFIG_NETFILTER_XT_MATCH_QUOTA=m
CONFIG_XFS_QUOTA=y
CONFIG_QUOTA=y
CONFIG_QUOTA_NETLINK_INTERFACE=y
CONFIG_PRINT_QUOTA_WARNING=y
# CONFIG_QUOTA_DEBUG is not set
CONFIG_QUOTA_TREE=m
CONFIG_QUOTACTL=y
CONFIG_QUOTACTL_COMPAT=y
</code></pre>

<h4 id="mount-options">Mount options</h4>

<p>Check quota are enable in /etc/fstab at the 4th column: <code>usrquota</code>, <code>grpquota</code> option must be specified:</p>

<pre><code>UUID=e248b430-aed3-4586-8a9f-2444515376e7 /               ext4    errors=remount-ro,acl,usrquota,grpquota 0 
</code></pre>

<h3 id="enable">Enable</h3>

<pre><code>quotacheck -ugm /
</code></pre>

<p>check quota files have been created:</p>

<pre><code>ls /aquota.*
/aquota.group  /aquota.user
</code></pre>

<p>this will fix the following error: <code>edquota: Cannot open quotafile //aquota.user: No such file or directory No filesystems with quota detected.</code></p>

<p>turn it on:</p>

<pre><code>quotaon -v /
</code></pre>

<p>=></p>

<pre><code>/dev/sda1 [/]: group quotas turned on
/dev/sda1 [/]: user quotas turned on
</code></pre>

<h3 id="quota-commands">Quota commands</h3>

<p>check quotas:</p>

<pre><code>quotacheck -a
</code></pre>

<p>display all quotas:</p>

<pre><code>repquota -a 
</code></pre>

<p>edit quota:</p>

<p>** do not edit <code>/etc/quotatab</code> file directly but use:</p>

<pre><code>edquota -u foo
edquota -g foogrp
</code></pre>

<h3 id="edit-grace-period">edit grace period</h3>

<p>grace period is the quantity of time that the system allows you to exceed the soft limit without blocking you.
After that, user will be considered as he exceeded the hard limit.</p>

<pre><code>edquota -t
</code></pre>

<h3 id="service">Service</h3>

<pre><code>/etc/init.d/quota start
service quota start
</code></pre>

<h2 id="test-it-%21">Test it !</h2>

<h3 id="as-root">As root</h3>

<pre><code>Disk quotas for user foo (uid 1001):
  Filesystem                   blocks       soft       hard     inodes     soft     hard
  /dev/sda1                        16          0          0          4        5        6          
</code></pre>

<p>Here, our foo user has:
* currently consumed 4 inodes on the FS
* a quota soft limit set to 5 inodes
* a quota hard  limit set to 6 inodes</p>

<h3 id="as-final-user">As final user</h3>

<h4 id="reach-the-soft-limit">Reach the soft limit</h4>

<pre><code>foo@debian:~$ touch file 
foo@debian:~$ touch file 2
sda1: warning, user file quota exceeded.
</code></pre>

<h4 id="reach-the-hard-limit">Reach the hard limit</h4>

<pre><code>foo@debian:~$ touch file 3
sda1: write failed, user file limit reached.
touch: cannot touch '3': Disk quota exceeded
</code></pre>

<h3 id="report">Report</h3>

<pre><code>root@debian:~# repquota /
</code></pre>

<p>=></p>

<pre><code>*** Report for user quotas on device /dev/sda1
Block grace time: 7days; Inode grace time: 7days
                        Block limits                File limits
User            used    soft    hard  grace    used  soft  hard  grace
----------------------------------------------------------------------
root      -- 3645544       0       0         113922     0     0       
man       --    1496       0       0            157     0     0       
lp        --   11980       0       0              1     0     0       
_apt      --      12       0       0              3     0     0       
systemd-timesync --       4       0       0              2     0     0       
avahi-autoipd --       4       0       0              1     0     0       
speech-dispatcher --       4       0       0              1     0     0       
colord    --       8       0       0              2     0     0       
lightdm   --      32       0       0              8     0     0       
ben       --   56020       0       0           1295     0     0       
foo       -+      16       0       0              6     5     6  6days
</code></pre>

<h2 id="resources">Resources</h2>

<ul>
<li>https://www.digitalocean.com/community/tutorials/how-to-set-filesystem-quotas-on-debian-10</li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: get command help]]></title>
            <link href="/blog/2020/04/17/linux-command-help"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-command-help</id>
            <content type="html"><![CDATA[<h2 id="%60whereis%60-command"><code>whereis</code> command</h2>

<p>search in several location <code>/usr/bin</code>... and returns exec file and related resources such as man, config.</p>

<pre><code>whereis sl
sl: /usr/games/sl /usr/share/man/man6/sl.6.gz
</code></pre>

<h2 id="%60which%60-command"><code>which</code> command</h2>

<p>only search in $PATH and only return path to exec:</p>

<pre><code>which sl
/usr/games/sl
</code></pre>

<h2 id="%60type%60-command"><code>type</code> command</h2>

<p>return how a command is interpreted:</p>

<pre><code>type -a echo
echo is a shell builtin
echo is /usr/bin/echo
echo is /bin/echo
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: find &amp; locate]]></title>
            <link href="/blog/2020/04/17/linux-find"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-find</id>
            <content type="html"><![CDATA[<h2 id="find">find</h2>

<h3 id="usual-commands">Usual commands</h3>

<pre><code>find / -name "*.c"
find / -maxdepth 4 -name "*.c"
find / -size +1M
find / -group ben
find / -user ben
</code></pre>

<h3 id="file-type">File type</h3>

<pre><code>find /etc/ -type d
find /etc/ -type f
</code></pre>

<h3 id="execute-action-on-file">Execute action on file</h3>

<h3 id="without-confirmation">without confirmation</h3>

<pre><code>find ~ -type d -exec ls -l {} \;    
</code></pre>

<ul>
<li><code>{}</code> replace the argument of the command, here it means a file in <code>ls -l file</code></li>
<li><code>\;</code>: escape the <code>;</code> => terminate the <code>ls -l {}</code> command</li>
</ul>

<h3 id="with-confirmation">with confirmation</h3>

<pre><code>find ~ -type d -ok -exec ls -l {} \; 
</code></pre>

<h3 id="operator">operator</h3>

<h4 id="and-%60-a%60">and <code>-a</code></h4>

<pre><code>find /etc/ \( -type d -a -group root \)
</code></pre>

<h4 id="or-%60-o%60">or <code>-o</code></h4>

<pre><code>find ~ \( -name "*txt" -o -name "*.md" \)
</code></pre>

<h4 id="negation-%60%21%60">negation <code>!</code></h4>

<pre><code>find ~ ! -name "*.md"
</code></pre>

<h2 id="locate">locate</h2>

<ul>
<li>faster than find</li>
<li>only works on file name</li>
<li><p>use a db</p>

<p>locate README.md
updatedb</p></li>
</ul>

<h3 id="modern-locate">modern locate</h3>

<pre><code>mlocate README.md
</code></pre>

<h3 id="secure-locate">secure locate</h3>

<pre><code>slocate README.md
</code></pre>

<p>the locate command is a symlink to one of these programs:</p>

<pre><code>ls -l /usr/bin/locate
lrwxrwxrwx 1 root root 24 avril 21 13:09 /usr/bin/locate -&gt; /etc/alternatives/locate

ls -l /etc/alternatives/locate
lrwxrwxrwx 1 root root 16 avril 21 13:09 /etc/alternatives/locate -&gt; /usr/bin/mlocate
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: file permissions 4 - umask]]></title>
            <link href="/blog/2020/04/17/linux-file-permissions-4"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-file-permissions-4</id>
            <content type="html"><![CDATA[<h2 id="print-umask">print umask</h2>

<pre><code>umask -S
u=rwx,g=rwx,o=rx

umask -p
umask 0002
</code></pre>

<p>default rights when a file is created are:</p>

<ul>
<li>file: 0666</li>
<li>folder : O777</li>
</ul>

<p><strong>The calculated rights for new files are the default rights - the umask: 0666-0002=0664</strong></p>

<pre><code>touch umasktest
ls -l umasktest 
-rw-rw-r-- 1 ordinateur ordinateur 0 avril 21 14:30 umasktest
</code></pre>

<h2 id="modify-umask">modify umask</h2>

<pre><code>umask 0022
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: file permissions 3 - ACL]]></title>
            <link href="/blog/2020/04/17/linux-file-permissions-3"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-file-permissions-3</id>
            <content type="html"><![CDATA[<p>ACL usage: when POSIX rights are too limited. Check ACL support is enabled:</p>

<pre><code>grep ACL /boot/config* | grep -i ext4
</code></pre>

<p>install package:</p>

<pre><code>apt install acl
</code></pre>

<p>Enable if needed in <code>/etc/fstab</code>, with option <code>acl</code></p>

<p>create a test file: <code>touch test</code>
create a test user: <code>adduser testuser</code>
create a group user: <code>groupadd testgroup</code></p>

<h2 id="getfacl">getfacl</h2>

<pre><code>getfacl test

# file: test
# owner: root
# group: root
user::rw-
group::r--
other::r--
</code></pre>

<h2 id="setfacl">setfacl</h2>

<p>Let's say we want to give an extra <code>rw</code> permissions to our <code>testuser</code> without using POSIX rights:</p>

<pre><code>setfacl -m u:testuser:rw test
</code></pre>

<p>check that:</p>

<pre><code>getfacl test
# file: test
# owner: root
# group: root
user::rw-
user:testuser:rw-
group::r--
mask::rw-
other::r--
</code></pre>

<p>Let's say we want to give an extra <code>rwx</code> permissions to our <code>testgroup</code> without using POSIX rights:</p>

<pre><code>setfacl -m g:testgroup:rwx test
</code></pre>

<p>check that:</p>

<pre><code>getfacl test
# file: test
# owner: root
# group: root
user::rw-
user:testuser:rw-
group::r--
group:testgroup:rwx
mask::rwx
other::r--
</code></pre>

<p>It is possible to edit POSIX rights without specifying user or group:</p>

<pre><code>setfacl -m g::r test
getfacl test
# file: test
# owner: root
# group: root
user::rw-
user:testuser:rw-
group::r--
group:testgroup:rwx
mask::rwx
other::r--
</code></pre>

<p>same for user:</p>

<pre><code>setfacl -m u::r test
getfacl test
# file: test
# owner: root
# group: root
user::r--
user:testuser:rw-
group::r--
group:testgroup:rwx
mask::rwx
other::r--
</code></pre>

<h3 id="acl-on-folder">ACL on folder</h3>

<ul>
<li>-d: inheritance. file in folder will inherit folder ACL</li>
<li><p>-R: recursive</p>

<p>mkdir test-folder
setfacl -dm u:testuser:rwx test-folder/</p></li>
</ul>

<p>check:</p>

<pre><code>getfacl test-folder/
# file: test-folder/
# owner: root
# group: root
user::rwx
group::r-x
other::r-x
default:user::rwx
default:user:testuser:rwx
default:group::r-x
default:mask::rwx
default:other::r-x
</code></pre>

<p>check child file inherits ACL from parent folder:</p>

<pre><code>touch test-folder/a
getfacl test-folder/a
</code></pre>

<p>=></p>

<pre><code># file: test-folder/a
# owner: root
# group: root
user::rw-
user:testuser:rwx       #effective:rw-
group::r-x          #effective:r--
mask::rw-
other::r--
</code></pre>

<p>Recursive mode is not linked to file.</p>

<h3 id="delete-acl">Delete ACL</h3>

<h4 id="delete-all-acls">Delete all ACLs</h4>

<pre><code>setfacl -b test
</code></pre>

<p>There is no more ACL rights, only POSIX rights:</p>

<pre><code>getfacl test
# file: test
# owner: root
# group: root
user::r--
group::r--
other::r--
</code></pre>

<h4 id="delete-default-acls-with-%60-k%60">Delete default ACLs with <code>-k</code></h4>

<pre><code>getfacl test-folder/
# file: test-folder/
# owner: root
# group: root
user::rwx
group::r-x
other::r-x
default:user::rwx
default:user:testuser:rwx
default:group::r-x
default:mask::rwx
default:other::r-x
</code></pre>

<p>delete: <code>setfacl -k test-folder/</code>
check: <code>getfacl test-folder/</code></p>

<pre><code># file: test-folder/
# owner: root
# group: root
user::rwx
group::r-x
other::r-x
</code></pre>

<h4 id="delete-a-particular-acl-with-%60-x%60">Delete a particular ACL with <code>-x</code></h4>

<pre><code>setfacl -x u:testuser test
</code></pre>

<h2 id="mask">Mask</h2>

<p>A mask is a logical AND operator. The effective rights will result of the logical AND operation of the right mask and the user or group ACL. Check the <code>#effective:</code> in <code>getfacl</code> output:</p>

<p>Let a <code>rwx</code> ACL to <code>testuser</code>:</p>

<pre><code>setfacl -m u:testuser:rwx test
</code></pre>

<p>Let a <code>rw</code> mask ACL:</p>

<pre><code>setfacl -m m::rw test
</code></pre>

<p>Check rights:</p>

<pre><code> getfacl test
# file: test
# owner: root
# group: root
user::r--
user:testuser:rwx               #effective:rw-
group::r--
mask::rw-
other::r--
</code></pre>

<p>For testuser:</p>

<pre><code>user:testuser:rwx               #effective:rw
</code></pre>

<p>The effective rights are the result of the logical AND operation, thus <code>rw</code></p>

<h2 id="acl-hierarchy">ACL hierarchy</h2>

<p>mask > user ACL > group ACL > owner group ACL > POSIX rights</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: file permissions 2 - advanced]]></title>
            <link href="/blog/2020/04/17/linux-file-permissions-2"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-file-permissions-2</id>
            <content type="html"><![CDATA[<h2 id="suid%3A-set-user-identification-permission">SUID: Set-user Identification permission</h2>

<p>usage:</p>

<pre><code>chmod u+s prg.sh
chmod 4[rwx][rwx][rwx] prg.sh
</code></pre>

<p>Specfic to executable file.</p>

<p>When a command or script with SUID bit set is run, its effective UID becomes that of the owner of the file, rather than of the user who is running it.</p>

<p>The setuid permission displayed as an âsâ in the ownerâs execute field.</p>

<p><a href="https://www.thegeekdiary.com/what-is-suid-sgid-and-sticky-bit/">see this ressource</a>: 
When a command or script with SUID bit set is run, its effective UID becomes that of the owner of the file, rather than of the user who is running it.</p>

<pre><code>chmod u+s prg.sh
chmod 4[rwx][rwx][rwx] prg.sh
</code></pre>

<p>create a file:</p>

<pre><code>root@raspbeeerry:/home/pi# touch prg.sh
root@raspbeeerry:/home/pi# ls -l prg.sh 
-rw-r--r-- 1 root root 0 Apr 16 15:06 prg.sh
</code></pre>

<p>add execution right for all:</p>

<pre><code>root@raspbeeerry:/home/pi# chmod a+x prg.sh 
root@raspbeeerry:/home/pi# ls -l prg.sh 
-rwxr-xr-x 1 root root 0 Apr 16 15:06 prg.sh
</code></pre>

<p>set SUID, note the lower 's' when X right:</p>

<pre><code>root@raspbeeerry:/home/pi# chmod u+s prg.sh 
root@raspbeeerry:/home/pi# ls -l prg.sh 
-rwsr-xr-x 1 root root 0 Apr 16 15:06 prg.sh
</code></pre>

<p>remove execution right for all, note the upper 'S' when no X right:</p>

<pre><code>root@raspbeeerry:/home/pi# chmod a-x prg.sh 
root@raspbeeerry:/home/pi# ls -l prg.sh 
-rwSr--r-- 1 root root 0 Apr 16 15:06 prg.sh
</code></pre>

<h2 id="sgid%3A-set-group-identification-permission">SGID: Set-group identification permission</h2>

<p>usage:</p>

<pre><code>chmod g+s prg.sh
chmod 2[rwx][rwx][rwx] prg.sh
</code></pre>

<p><a href="https://www.thegeekdiary.com/what-is-suid-sgid-and-sticky-bit/">see this ressource</a>: 
When SGID permission is set on a directory, files created in the directory belong to the group of which the directory is a member.
â For example if a user having write permission in the directory creates a file there, that file is a member of the same group as the directory and not the userâs group.
â This is very useful in creating shared directories.
â The setgid permission displays as an âsâ in the groupâs execute field.</p>

<h2 id="rights-on-folder">Rights on folder</h2>

<p>*r: allow to list
*w: allow to create/delete files
*x: allow to traverse</p>

<h2 id="sticky-bit-permission">Sticky bit permission</h2>

<p>usage:</p>

<pre><code>chmod +t folder
chmod 1[rwx][rwx][rwx] prg.sh
</code></pre>

<p><a href="https://www.thegeekdiary.com/what-is-suid-sgid-and-sticky-bit/">see this ressource</a>: 
The sticky bit is primarily used on shared directories.
* without the sticky bit : user with Write permission on a folder can create/delete other users files
* with the sticky bit : user with Write permission on a folder are allowed to create new files but not to delete files</p>

<p>Example:</p>

<p>as root, create a folder with sticky bit:</p>

<pre><code>root@raspbeeerry:/home/pi# mkdir test-folder
root@raspbeeerry:/home/pi# chmod a+w test-folder/
root@raspbeeerry:/home/pi# ls -ld test-folder/
drwxrwxrwx 2 root root 4096 Apr 16 14:53 test-folder/
root@raspbeeerry:/home/pi# touch test-folder/a
root@raspbeeerry:/home/pi# ls -l permissions.txt ^C
root@raspbeeerry:/home/pi# ^C
root@raspbeeerry:/home/pi# chmod +t test-folder/
</code></pre>

<p>as another user, let's try to create/delete file inside the folder with the sticky bit:</p>

<pre><code>pi@raspbeeerry ~ $ touch test-folder/b
pi@raspbeeerry ~ $ ls -l test-folder/
total 0
-rw-r--r-- 1 root root 0 Apr 16 14:58 a
-rw-r--r-- 1 pi   pi   0 Apr 16 14:59 b
pi@raspbeeerry ~ $ rm test-folder/a
rm: remove write-protected regular empty file 'test-folder/a'? 
</code></pre>

<p>as root, let's remove the sticky bit:</p>

<pre><code>root@raspbeeerry:/home/pi# chmod -t test-folder/
</code></pre>

<p>as another user, retry to delete file created by another user:</p>

<pre><code>pi@raspbeeerry ~ $ rm -f  test-folder/a
@raspbeeerry ~ $ ls -l test-folder/
total 0
-rw-r--r-- 1 pi pi 0 Apr 16 14:59 b
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: file permissions 1 - POSIX rights]]></title>
            <link href="/blog/2020/04/17/linux-file-permissions-1"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-file-permissions-1</id>
            <content type="html"><![CDATA[<h2 id="file-ownership">file ownership</h2>

<p>File ownership is managed by a user owner and a group owner.
See <code>ls -l</code> or <code>ls -n</code></p>

<p>Examples:</p>

<pre><code>chown user:group file #change owner and group
chown user file # change only owner
chown :group file #change only group, same as chgrp command
</code></pre>

<h2 id="linux-posix-rights">Linux POSIX rights</h2>

<p>POSIX is a standard.</p>

<h2 id="list-rights">List rights</h2>

<pre><code>ls -l
</code></pre>

<p>Type codes:</p>

<ul>
<li>-: file</li>
<li>d: folder</li>
<li>l: symlink</li>
<li>p: pipe. used to make 2 programs communicate</li>
<li>s: socket. used to make 2 programs communicate + network management + bidirectional</li>
<li>b: block device, ie write block by block</li>
<li>c: character device, ie write char by char</li>
</ul>

<p>9 bits: 3 User + 3 Group + 3 Other</p>

<h2 id="chmod">chmod</h2>

<ul>
<li>u: for user</li>
<li>g: for group</li>
<li>o: for others</li>
<li><p>a: for all</p></li>
<li><p>+: add right</p></li>
<li>-: remove right</li>
<li><p>=: set right</p></li>
<li><p>r: read. 2^2 => 4</p></li>
<li>w: write.2^1 => 2</li>
<li><p>x: execute.2^0 => 1</p>

<p>chmod u+r,g-r file.txt
chmod a=rwx file.txt
chmod 740 file.txt</p></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: material 10 -  File System Summary]]></title>
            <link href="/blog/2020/04/13/linux-basics-material-10"/>
            <updated>2020-04-13T00:00:00+00:00</updated>
            <id>/blog/2020/04/13/linux-basics-material-10</id>
            <content type="html"><![CDATA[<ul>
<li>partitioning a disk means divide it into several spaces: see <code>fdisk</code> or <code>parted</code> </li>
<li>formatting means creating a FS on partition: see <code>mkfs</code></li>
<li>FS can  be analysed with <code>dumpe2fs</code>, tuned with <code>tune2fs</code> </li>
<li>FS can  be checked with <code>fsck</code> </li>
<li>mount means attaching a device in a particular folder of the linux tree with <code>mount</code></li>
<li>FS mount can be automated with <code>/etc/fstab</code> file</li>
</ul>
]]></content>
        </entry>
    </feed>