<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/blog/categories/security.xml" rel="self"/>
    <link href="/"/>
    <updated>2021-05-18T13:18:16+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[rpi dev 7 - System logs]]></title>
            <link href="/blog/2020/04/01/rpi-dev-7-system-logs"/>
            <updated>2020-04-01T00:00:00+00:00</updated>
            <id>/blog/2020/04/01/rpi-dev-7-system-logs</id>
            <content type="html"><![CDATA[<h2 id="interesting-logs">interesting logs</h2>

<ul>
<li>/var/log/auth.log</li>
<li>/var/log/ufw.log</li>
<li>/var/log/apache2/*access.log</li>
<li>/var/log/apache2/*error.log</li>
</ul>

<h2 id="tools">tools</h2>

<h3 id="lnav---ncurses-based-log-file-viewer">lnav - ncurses-based log file viewer</h3>

<p>From man: The  log  file navigator, lnav, is an enhanced log file viewer that takes advantage of any semantic information that can be gleaned from the files being viewed, such as timestamps and log levels</p>

<pre><code>apt install -y lnav

lnav /var/log/auth.log /var/log/ufw.log /var/log/apache2/*access.log
</code></pre>

<h3 id="ezservermonitor">ezservermonitor</h3>

<p>Install webapp:</p>

<pre><code>wget https://www.ezservermonitor.com/esm-web/downloads/version/2.5 -O ezservermonitor.zip
</code></pre>

<p>Configure in <code>conf/esm.config.json</code></p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[rpi dev 5 - UFW]]></title>
            <link href="/blog/2020/04/01/rpi-dev-5-ufw"/>
            <updated>2020-04-01T00:00:00+00:00</updated>
            <id>/blog/2020/04/01/rpi-dev-5-ufw</id>
            <content type="html"><![CDATA[<h2 id="enable%2Fdisable">enable/disable</h2>

<pre><code>ufw logging on
ufw disable
ufw enable
</code></pre>

<h2 id="log-file">log file</h2>

<pre><code>tail -f /var/log/ufw.log
</code></pre>

<h2 id="print-fw-rules">Print FW rules</h2>

<pre><code>ufw status verbose
ufw status numbered
</code></pre>

<h2 id="common-rules">Common rules</h2>

<h3 id="block-all-incoming-%26-outgoing-trafic">Block all INcoming &amp; outgoing trafic</h3>

<pre><code>ufw default deny incoming
ufw default deny outgoing
</code></pre>

<h3 id="allow-common-services">Allow common services</h3>

<pre><code>ufw allow out 53 comment 'DNS'
ufw allow out 465 comment 'SMTP'
ufw allow ntp
</code></pre>

<h3 id="allow-all-incomming-requests-on-all-ports-from-an-%40ip-range">Allow all INcomming requests on all ports from an @IP range</h3>

<pre><code>ufw allow from 192.168.1.0/24
</code></pre>

<h3 id="allow-all-incomming-requests-on-all-ports-from-an-%40ip">Allow all INcomming requests on all ports from an @IP</h3>

<pre><code>ufw allow from XXX.XXX.XXX.XXX
</code></pre>

<h3 id="allow-incomming-requests-on-specific-port-from-an-%40ip">Allow INcomming requests on specific port from an @IP</h3>

<pre><code>ufw allow from XXX.XXX.XXX.XXX to any port 80
ufw allow from XXX.XXX.XXX.XXX to any port 3000
</code></pre>

<h3 id="for-apt-and-software-installation">For apt and software installation</h3>

<p>use that to allow apt, for instance <code>apt install -y lnav</code>:</p>

<pre><code>ufw allow out 80/tcp comment 'allow OUT 80 temporary for apt' &amp;&amp; ufw allow out 443/tcp comment 'allow OUT 443 temporary for apt'
</code></pre>

<p>remove:</p>

<pre><code>ufw delete allow out 80/tcp &amp;&amp; ufw delete allow out 443/tcp
</code></pre>

<p>OR:</p>

<pre><code>ufw default allow outgoing
</code></pre>

<p>remove:</p>

<pre><code>ufw default deny outgoing
</code></pre>

<h2 id="%C2%A0reset-all-rules"> Reset all rules</h2>

<pre><code>ufw reset
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Installing Nextcloud on RPI device]]></title>
            <link href="/blog/2017/07/04/rpi-nexcloud"/>
            <updated>2017-07-04T00:00:00+00:00</updated>
            <id>/blog/2017/07/04/rpi-nexcloud</id>
            <content type="html"><![CDATA[<h2 id="install-raspbian">Install Raspbian</h2>

<h3 id="install-os">Install OS</h3>

<ul>
<li><a href="https://www.raspberrypi.org/downloads/raspbian/">download Raspbian</a></li>
<li><a href="/blog/2017/06/12/create-a-debian-iso-live-usb-drive">burn it to the RPI SD card</a></li>
</ul>

<h3 id="basic-configuration">Basic configuration</h3>

<ul>
<li>enable SSH: <code>sudo raspi-config</code> > <code>Interfacing Options</code> > <code>SSH</code></li>
<li>change default password running : <code>passwd</code></li>
<li>change keyboard layout if needed</li>
</ul>

<h2 id="install-nextcloud">Install Nextcloud</h2>

<h3 id="nextcloud-stack">Nextcloud Stack</h3>

<p>The following script will install the full stack. Run it as follow:</p>

<pre><code>    chmod +x nextcloud.sh
    ./nextcloud.sh
</code></pre>

<p>Provisioning script from github:</p>

<script src="https://gist.github.com/benIT/1545b4ccf883d41be9b0cdd97e043c2f.js"></script>

<h3 id="tuning">Tuning</h3>

<p>Check settings here <code>https://nextcloud.local/index.php/settings/admin/</code>:</p>

<h4 id="enable-php7.0-opcache">Enable PHP7.0 opcache</h4>

<p>Add this in <code>/etc/php/7.0/apache2/php.ini</code>:</p>

<pre><code>    opcache.enable=1
    opcache.enable_cli=1
    opcache.interned_strings_buffer=8
    opcache.max_accelerated_files=10000
    opcache.memory_consumption=128
    opcache.save_comments=1
    opcache.revalidate_freq=1
</code></pre>

<h4 id="php7.0-apcu">PHP7.0 apcu</h4>

<pre><code>    sudo apt-get install php7.0-apcu -y
</code></pre>

<p>Check this file exists:</p>

<pre><code>    cat  /etc/php/7.0/mods-available/apcu.ini
</code></pre>

<p>Finally, add this in <code>nextcloud/config/config.php</code>:</p>

<pre><code>    'memcache.local' =&gt; '\OC\Memcache\APCu',
</code></pre>

<h2 id="usb-drive">USB drive</h2>

<p>In this case, I have an usb external hard drive. I need to <a href="https://kwilson.io/blog/force-your-raspberry-pi-to-mount-an-external-usb-drive-every-time-it-starts-up/">fix it mount point</a> to be always the location in order to configure it in Nextcloud.</p>

<p>Edit  <code>/etc/fstab</code>:</p>

<pre><code>/DEV/SDA1       /MEDIA/WESTERN-DIGITAL-1-TO     EXT4    DEFAULTS        0       0
sudo chown -R root:www-data /media/western-digital-1-to/
chmod g+rwx /media/western-digital-1-to/
</code></pre>

<h2 id="nextcloud-trusted-domains">Nextcloud trusted domains</h2>

<p>Edit <code>trusted_domains</code> settings in <code>/var/www/nextcloud/config</code> if needed.</p>

<h2 id="enjoy">Enjoy</h2>

<p>That was it! Nextcloud if now fully configured on your RPI, enjoy!</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[First steps with Veracrypt]]></title>
            <link href="/blog/2017/06/19/veracrypt-first-steps"/>
            <updated>2017-06-19T00:00:00+00:00</updated>
            <id>/blog/2017/06/19/veracrypt-first-steps</id>
            <content type="html"><![CDATA[<h2 id="why-vercrypt%3F">Why Vercrypt?</h2>

<p>It's :</p>

<ul>
<li><a href="https://www.nextinpact.com/news/91703-veracrypt-comment-chiffrer-et-cacher-fichiers-disque-dur-externe-ou-clef-usb.htm">secure</a> (based on truecrypt audit and security fix)</li>
<li><a href="https://github.com/veracrypt/VeraCrypt">open source</a></li>
<li><a href="https://www.nextinpact.com/news/91703-veracrypt-comment-chiffrer-et-cacher-fichiers-disque-dur-externe-ou-clef-usb.htm">french</a></li>
</ul>

<h2 id="download">Download</h2>

<ul>
<li><a href="https://veracrypt.codeplex.com/wikipage?title=Downloads#Title">download from official site</a></li>
</ul>

<h2 id="create-a-container-based-on-keyfile-authentication">Create a container based on keyfile authentication</h2>

<p>In this example, my container is called <code>animals</code> and has been created from Veracrypt GUI. 
This container has no password, it based on key system. The key has been generated from Veracrypt GUI.</p>

<ul>
<li>The container is called <code>animals</code></li>
<li>The key is called <code>animals-key</code></li>
</ul>

<h2 id="add-files-to-container">Add files to container</h2>

<pre><code>    cd veracrypt
    veracrypt animals --keyfiles=animals-key --password=''
    tar -cvzf animals.tgz /home/ben/Images/animals-wallpapers
    cp animals.tgz /media/veracrypt1/
    veracrypt -d
</code></pre>

<h2 id="let%27s-backup-it-on-a-friend-rpi%21">Let's backup it on a friend RPI!</h2>

<pre><code>    rsync -avzh ben@XXX.XXX.XXX.XXX:/home/ben/veracrypt /home/ben/veracrypt        
</code></pre>
]]></content>
        </entry>
    </feed>