<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/blog/categories/linux.xml" rel="self"/>
    <link href="/"/>
    <updated>2021-05-07T12:01:31+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[GITEA 503 after changing RPI @IP]]></title>
            <link href="/blog/2021/03/24/gitea-503"/>
            <updated>2021-03-24T00:00:00+00:00</updated>
            <id>/blog/2021/03/24/gitea-503</id>
            <content type="html"><![CDATA[<p>After moving RPI from a lan to another lan, service gitea failed with a 503 error.</p>

<p>This error comes from the new @IP of the device on the lan, this is now <code>192.168.0.13</code></p>

<h2 id="edit-%2Fmnt%2Fgitea%2Fcustom%2Fconf%2Fapp.ini">Edit /mnt/gitea/custom/conf/app.ini</h2>

<pre><code>[database]
DB_TYPE  = postgres
HOST     = 192.168.0.13:5432
</code></pre>

<h2 id="edit-%2Fetc%2Fpostgresql%2F11%2Fmain%2Fpostgresql.conf">Edit /etc/postgresql/11/main/postgresql.conf</h2>

<pre><code>listen_addresses = '192.168.0.13'
</code></pre>

<h2 id="restart">Restart</h2>

<pre><code>service gitea restart

service gitea status
</code></pre>

<h2 id="check">Check</h2>

<pre><code>curl localhost:3000
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Fix static @IP on RPI]]></title>
            <link href="/blog/2021/03/24/rpi-static-ip"/>
            <updated>2021-03-24T00:00:00+00:00</updated>
            <id>/blog/2021/03/24/rpi-static-ip</id>
            <content type="html"><![CDATA[<h2 id="get-dns-servers-%40ips">GET DNS servers @IPs</h2>

<pre><code>cat /etc/resolv.conf 
</code></pre>

<p>=></p>

<pre><code>nameserver 89.2.0.1
nameserver 89.2.0.2
</code></pre>

<h2 id="set-up-fix-%40ip">Set up fix @IP</h2>

<p>In <code>/etc/dhcpcd.conf</code>, add the following lines:</p>

<pre><code>interface eth0
static ip_address=192.168.0.13
static routers=192.168.0.1
static domain_name_servers=89.2.0.1 89.2.0.2
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Apache log analysis]]></title>
            <link href="/blog/2021/02/22/apache-log-analyze"/>
            <updated>2021-02-22T00:00:00+00:00</updated>
            <id>/blog/2021/02/22/apache-log-analyze</id>
            <content type="html"><![CDATA[<h2 id="installation">Installation</h2>

<pre><code>apt-get install -y  gnuplot goaccess jq
</code></pre>

<h2 id="bash-script">BASH script</h2>

<pre><code>RESULT_FILE=results.csv

&gt;$RESULT_FILE
for LOG_FILE in access-*.log
do
    echo $LOG_FILE
    OUTPUT_FILE=${LOG_FILE//access-/}
    OUTPUT_FILE=${OUTPUT_FILE//_00_00_00.log/}
    goaccess $LOG_FILE --log-format=COMMON -o $OUTPUT_FILE.json --ignore-panel=REQUESTS --ignore-panel=REQUESTS_STATIC --ignore-panel=NOT_FOUND --ignore-panel=HOSTS --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=VISIT_TIMES --ignore-panel=VIRTUAL_HOSTS --ignore-panel=REFERRERS --ignore-panel=REFERRING_SITES --ignore-panel=KEYPHRASES --ignore-panel=STATUS_CODES --ignore-panel=REMOTE_USER --ignore-panel=GEO_LOCATION
    HITS=$(jq '.visitors.data[0].visitors.count' $OUTPUT_FILE.json)
    DATE=$(jq '.visitors.data[0].data' $OUTPUT_FILE.json | tr -d '"')
    echo -e $DATE,$HITS &gt;&gt; $RESULT_FILE
done

gnuplot &lt;&lt;- EOF
    set datafile separator ","
    set timefmt '%Y%m%d'
    set format x '%m-%d'
    set xlabel "time"
    set ylabel "visitors"
    set title "Visitors over time"
    set term png size 800,400
    set output "${FILE}.png"
    set xdata time
    set boxwidth 0.5
    set style fill solid
    set xtics rotate

    plot "$RESULT_FILE" using 1:2 with boxes
EOF
</code></pre>

<p><img src="/images/apache-log-analyse/gnuplot.png" alt="screenshot" /></p>

<p>Here, we find there is a rush on <code>2021_01_29_00_00_00</code>, let's analyse time distribution with:</p>

<pre><code>goaccess  access-2021_01_29_00_00_00.log --log-format=COMMON -o report_29_01.html --ignore-panel=REQUESTS --ignore-panel=REQUESTS_STATIC --ignore-panel=NOT_FOUND --ignore-panel=HOSTS --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=VIRTUAL_HOSTS --ignore-panel=REFERRERS --ignore-panel=REFERRING_SITES --ignore-panel=KEYPHRASES --ignore-panel=STATUS_CODES --ignore-panel=REMOTE_USER --ignore-panel=GEO_LOCATION
</code></pre>

<p><img src="/images/apache-log-analyse/time-repartition.png" alt="screenshot" /></p>

<p>Max at 15:00, let's dig further</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[wireshark basics]]></title>
            <link href="/blog/2021/02/17/wireshark"/>
            <updated>2021-02-17T00:00:00+00:00</updated>
            <id>/blog/2021/02/17/wireshark</id>
            <content type="html"><![CDATA[<h2 id="install">install</h2>

<pre><code>sudo apt install wireshark -y
</code></pre>

<p>answer yes to allow wireshark execution question for non super user.</p>

<pre><code>sudo usermod -aG wireshark $(whoami)
</code></pre>

<p>logout and login</p>

<h2 id="add-src-%26-destination-port-columns">Add src &amp; destination port columns</h2>

<p>right clock "column preferences" and add "source port" &amp; "destination port"</p>

<h2 id="sniff-post-request-on-a-uri-pattern">sniff post request on a uri pattern</h2>

<pre><code>http.request.method == "POST" &amp;&amp; http.request.uri contains login 
</code></pre>

<h2 id="scan-lan">Scan LAN</h2>

<p>Let's use nmap to san lan and choose the @IP machine to listen. Here it's a RPI.</p>

<pre><code>sudo nmap -sT -O 192.168.1.0/24
</code></pre>

<p>=></p>

<pre><code>Starting Nmap 7.60 ( https://nmap.org ) at 2021-02-17 10:09 CET
Nmap scan report for XYZ-eth0 (192.168.1.68)
Host is up (0.0030s latency).
Not shown: 994 closed ports
PORT     STATE SERVICE
21/tcp   open  ftp
22/tcp   open  ssh
80/tcp   open  http
443/tcp  open  https
3000/tcp open  ppp
5432/tcp open  postgresql
MAC Address: B8:27:EB:39:1D:77 (Raspberry Pi Foundation)
</code></pre>

<h2 id="wireshark-over-ssh-via-sshdump">Wireshark over ssh via sshdump</h2>

<h3 id="install-tools-on-the-remote-server">Install tools on the remote server</h3>

<pre><code>apt install -y tcpdump
</code></pre>

<h4 id="allow-tcpdump-execution-for-non-superuser">Allow tcpdump execution for non superuser</h4>

<pre><code>sudo groupadd pcap
sudo usermod -a -G pcap $USER
sudo chgrp pcap /usr/sbin/tcpdump
sudo chmod 750 /usr/sbin/tcpdump
sudo setcap cap_net_raw,cap_net_admin=eip /usr/sbin/tcpdump
</code></pre>

<p>logout &amp; login</p>

<p>check this command is running without error:</p>

<pre><code>tcpdump -A port '(80 or 443)'
</code></pre>

<p>When this part is ok, we can now use wireshark to use tcp dump over ssh. This can be checked with an ssh command:</p>

<pre><code>ssh XXX@192.168.1.68 "sudo tcpdump"
</code></pre>

<h2 id="configure-wireshark-to-listen-over-ssh">Configure wireshark to listen over ssh</h2>

<p>From the main menu, select ssh remote capture: sshdump</p>

<p>Fill in the windows</p>

<p>We can now capture packets.</p>

<h2 id="wireshark-filters">Wireshark filters</h2>

<pre><code>http
ip.dst == 192.168.1.68
ip.src == 192.168.1.68
http.request.method == "POST" 
http.request.method == "POST" &amp;&amp; http.request.uri contains login
tcp.port==80
tcp.port==443
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Linux install CA cert file]]></title>
            <link href="/blog/2020/10/12/ca-certfile"/>
            <updated>2020-10-12T00:00:00+00:00</updated>
            <id>/blog/2020/10/12/ca-certfile</id>
            <content type="html"><![CDATA[<p>Self signed certificates throw error and can make CLI scripts fail. Here is the procedure to use to import cert file at a system level.</p>

<p>Tested with debian 10.</p>

<pre><code>cp my-cert-file.crt /usr/local/share/ca-certificates
update-ca-certificates
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Clean your git repo with BFG Repo-Cleaner]]></title>
            <link href="/blog/2020/09/16/git-bfg"/>
            <updated>2020-09-16T00:00:00+00:00</updated>
            <id>/blog/2020/09/16/git-bfg</id>
            <content type="html"><![CDATA[<p>Use case : delete the <code>medias</code> from my git repo that contains huge files.</p>

<p>Download bgf.jar from https://rtyley.github.io/bfg-repo-cleaner/</p>

<pre><code>git clone --mirror https://git.mycompany.com/myrepo.git

java -jar ../bfg-1.13.0.jar --delete-folders medias myrepo.git

cd myrepo.git

git reflog expire --expire=now --all &amp;&amp; git gc --prune=now --aggressive

git push
</code></pre>

<p>Size 400Mo -> 30 Mo</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: startup]]></title>
            <link href="/blog/2020/04/17/linux-startup"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-startup</id>
            <content type="html"><![CDATA[<p>init: parent of all ps. PID=0</p>

<p>stages</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: quotas]]></title>
            <link href="/blog/2020/04/17/linux-quotas"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-quotas</id>
            <content type="html"><![CDATA[<h2 id="quotas">quotas</h2>

<p>Quota specifications:</p>

<ul>
<li>number of inode (inode: pointer to file)</li>
<li>number of block</li>
</ul>

<p>Types:</p>

<ul>
<li>hard: block user when quota is reached</li>
<li>soft: inform user that is about to reached the quota</li>
</ul>

<h3 id="install-quotas">install quotas</h3>

<pre><code>apt install quota
</code></pre>

<h3 id="enable-quotas">Enable quotas</h3>

<h4 id="%C2%A0check-config-supports-quota"> Check config supports quota</h4>

<pre><code>grep QUOTA /boot/config-*
</code></pre>

<p>=></p>

<pre><code>CONFIG_NFT_QUOTA=m
CONFIG_NETFILTER_XT_MATCH_QUOTA=m
CONFIG_XFS_QUOTA=y
CONFIG_QUOTA=y
CONFIG_QUOTA_NETLINK_INTERFACE=y
CONFIG_PRINT_QUOTA_WARNING=y
# CONFIG_QUOTA_DEBUG is not set
CONFIG_QUOTA_TREE=m
CONFIG_QUOTACTL=y
CONFIG_QUOTACTL_COMPAT=y
</code></pre>

<h4 id="mount-options">Mount options</h4>

<p>Check quota are enable in /etc/fstab at the 4th column: <code>usrquota</code>, <code>grpquota</code> option must be specified:</p>

<pre><code>UUID=e248b430-aed3-4586-8a9f-2444515376e7 /               ext4    errors=remount-ro,acl,usrquota,grpquota 0 
</code></pre>

<h3 id="enable">Enable</h3>

<pre><code>quotacheck -ugm /
</code></pre>

<p>check quota files have been created:</p>

<pre><code>ls /aquota.*
/aquota.group  /aquota.user
</code></pre>

<p>this will fix the following error: <code>edquota: Cannot open quotafile //aquota.user: No such file or directory No filesystems with quota detected.</code></p>

<p>turn it on:</p>

<pre><code>quotaon -v /
</code></pre>

<p>=></p>

<pre><code>/dev/sda1 [/]: group quotas turned on
/dev/sda1 [/]: user quotas turned on
</code></pre>

<h3 id="quota-commands">Quota commands</h3>

<p>check quotas:</p>

<pre><code>quotacheck -a
</code></pre>

<p>display all quotas:</p>

<pre><code>repquota -a 
</code></pre>

<p>edit quota:</p>

<p>** do not edit <code>/etc/quotatab</code> file directly but use:</p>

<pre><code>edquota -u foo
edquota -g foogrp
</code></pre>

<h3 id="edit-grace-period">edit grace period</h3>

<p>grace period is the quantity of time that the system allows you to exceed the soft limit without blocking you.
After that, user will be considered as he exceeded the hard limit.</p>

<pre><code>edquota -t
</code></pre>

<h3 id="service">Service</h3>

<pre><code>/etc/init.d/quota start
service quota start
</code></pre>

<h2 id="test-it-%21">Test it !</h2>

<h3 id="as-root">As root</h3>

<pre><code>Disk quotas for user foo (uid 1001):
  Filesystem                   blocks       soft       hard     inodes     soft     hard
  /dev/sda1                        16          0          0          4        5        6          
</code></pre>

<p>Here, our foo user has:
* currently consumed 4 inodes on the FS
* a quota soft limit set to 5 inodes
* a quota hard  limit set to 6 inodes</p>

<h3 id="as-final-user">As final user</h3>

<h4 id="reach-the-soft-limit">Reach the soft limit</h4>

<pre><code>foo@debian:~$ touch file 
foo@debian:~$ touch file 2
sda1: warning, user file quota exceeded.
</code></pre>

<h4 id="reach-the-hard-limit">Reach the hard limit</h4>

<pre><code>foo@debian:~$ touch file 3
sda1: write failed, user file limit reached.
touch: cannot touch '3': Disk quota exceeded
</code></pre>

<h3 id="report">Report</h3>

<pre><code>root@debian:~# repquota /
</code></pre>

<p>=></p>

<pre><code>*** Report for user quotas on device /dev/sda1
Block grace time: 7days; Inode grace time: 7days
                        Block limits                File limits
User            used    soft    hard  grace    used  soft  hard  grace
----------------------------------------------------------------------
root      -- 3645544       0       0         113922     0     0       
man       --    1496       0       0            157     0     0       
lp        --   11980       0       0              1     0     0       
_apt      --      12       0       0              3     0     0       
systemd-timesync --       4       0       0              2     0     0       
avahi-autoipd --       4       0       0              1     0     0       
speech-dispatcher --       4       0       0              1     0     0       
colord    --       8       0       0              2     0     0       
lightdm   --      32       0       0              8     0     0       
ben       --   56020       0       0           1295     0     0       
foo       -+      16       0       0              6     5     6  6days
</code></pre>

<h2 id="resources">Resources</h2>

<ul>
<li>https://www.digitalocean.com/community/tutorials/how-to-set-filesystem-quotas-on-debian-10</li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: get command help]]></title>
            <link href="/blog/2020/04/17/linux-command-help"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-command-help</id>
            <content type="html"><![CDATA[<h2 id="%60whereis%60-command"><code>whereis</code> command</h2>

<p>search in several location <code>/usr/bin</code>... and returns exec file and related resources such as man, config.</p>

<pre><code>whereis sl
sl: /usr/games/sl /usr/share/man/man6/sl.6.gz
</code></pre>

<h2 id="%60which%60-command"><code>which</code> command</h2>

<p>only search in $PATH and only return path to exec:</p>

<pre><code>which sl
/usr/games/sl
</code></pre>

<h2 id="%60type%60-command"><code>type</code> command</h2>

<p>return how a command is interpreted:</p>

<pre><code>type -a echo
echo is a shell builtin
echo is /usr/bin/echo
echo is /bin/echo
</code></pre>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[linux basics: find &amp; locate]]></title>
            <link href="/blog/2020/04/17/linux-find"/>
            <updated>2020-04-17T00:00:00+00:00</updated>
            <id>/blog/2020/04/17/linux-find</id>
            <content type="html"><![CDATA[<h2 id="find">find</h2>

<h3 id="usual-commands">Usual commands</h3>

<pre><code>find / -name "*.c"
find / -maxdepth 4 -name "*.c"
find / -size +1M
find / -group ben
find / -user ben
</code></pre>

<h3 id="file-type">File type</h3>

<pre><code>find /etc/ -type d
find /etc/ -type f
</code></pre>

<h3 id="execute-action-on-file">Execute action on file</h3>

<h3 id="without-confirmation">without confirmation</h3>

<pre><code>find ~ -type d -exec ls -l {} \;    
</code></pre>

<ul>
<li><code>{}</code> replace the argument of the command, here it means a file in <code>ls -l file</code></li>
<li><code>\;</code>: escape the <code>;</code> => terminate the <code>ls -l {}</code> command</li>
</ul>

<h3 id="with-confirmation">with confirmation</h3>

<pre><code>find ~ -type d -ok -exec ls -l {} \; 
</code></pre>

<h3 id="operator">operator</h3>

<h4 id="and-%60-a%60">and <code>-a</code></h4>

<pre><code>find /etc/ \( -type d -a -group root \)
</code></pre>

<h4 id="or-%60-o%60">or <code>-o</code></h4>

<pre><code>find ~ \( -name "*txt" -o -name "*.md" \)
</code></pre>

<h4 id="negation-%60%21%60">negation <code>!</code></h4>

<pre><code>find ~ ! -name "*.md"
</code></pre>

<h2 id="locate">locate</h2>

<ul>
<li>faster than find</li>
<li>only works on file name</li>
<li><p>use a db</p>

<p>locate README.md
updatedb</p></li>
</ul>

<h3 id="modern-locate">modern locate</h3>

<pre><code>mlocate README.md
</code></pre>

<h3 id="secure-locate">secure locate</h3>

<pre><code>slocate README.md
</code></pre>

<p>the locate command is a symlink to one of these programs:</p>

<pre><code>ls -l /usr/bin/locate
lrwxrwxrwx 1 root root 24 avril 21 13:09 /usr/bin/locate -&gt; /etc/alternatives/locate

ls -l /etc/alternatives/locate
lrwxrwxrwx 1 root root 16 avril 21 13:09 /etc/alternatives/locate -&gt; /usr/bin/mlocate
</code></pre>
]]></content>
        </entry>
    </feed>