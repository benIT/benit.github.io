<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[benIT&#039;s notebook]]></title>
    <link href="/blog/categories/Moodle.xml" rel="self"/>
    <link href="/"/>
    <updated>2021-10-11T13:54:31+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Setting up angularjs and chartjs in Moodle 3.X]]></title>
            <link href="/blog/2017/04/18/setting-up-angular-in moodle-3"/>
            <updated>2017-04-18T00:00:00+00:00</updated>
            <id>/blog/2017/04/18/setting-up-angular-in moodle-3</id>
            <content type="html"><![CDATA[<p>I was wondering how can I integrate angularjs to my moodle plugin. 
Moodle isn't designed as frontend/backend, so how can I integrate angularjs with smashing moodle?
I create a POOC, let's checkout that:</p>

<ul>
<li><p>Create a custom template page : <a href="https://github.com/benIT/moodle_report_angularjspooc/blob/master/templates/reportindex_page.mustache">the custom template</a> will be only used to put <code>ng-app</code> directive</p></li>
<li><p>Load <a href="https://github.com/benIT/moodle_report_angularjspooc/blob/master/index.php#L26">all javascript</a> in the template page</p></li>
<li><p>Write PHP AJAX or Moodle Webservice to expose data:
In my case, I didn't care about exposing webservices so I choose to <a href="https://github.com/benIT/moodle_report_angularjspooc/blob/master/ajax.php">write a simple ajax page</a>.</p></li>
<li><p>Write your <a href="https://github.com/benIT/moodle_report_angularjspooc/tree/master/angular">angularjs code</a></p></li>
<li><p>Enjoy angularjs on moodle ! In this cas, we will use this to generate beautiful reports with Charts.js</p>

<p><strong><a href="https://github.com/benIT/moodle_report_angularjspooc">The Repository is available at github.</a></strong></p></li>
</ul>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Filter functionality in Moodle Configurable Reports]]></title>
            <link href="/blog/2017/04/11/moodle-configurable-reports-filters"/>
            <updated>2017-04-11T00:00:00+00:00</updated>
            <id>/blog/2017/04/11/moodle-configurable-reports-filters</id>
            <content type="html"><![CDATA[<p>This post describes the filter functionality in Moodle Configurable Reports.</p>

<h2 id="create-the-sql-query">Create the sql query</h2>

<pre><code>    SELECT *
    from prefix_course
    WHERE
    1=1
    %%FILTER_COURSES:prefix_course.id%%
    %%FILTER_SEARCHTEXT:prefix_course.fullname:~%%
</code></pre>

<h2 id="add-filter-fields">Add filter fields</h2>

<p>Available filters are located in: <code>components/filters/</code> of Configurable Reports.</p>

<p>In the <code>filters</code> tab:</p>

<ul>
<li><p>add <code>Courses</code> that will refer to <code>%%FILTER_COURSES:prefix_course.id%%</code></p></li>
<li><p>add <code>Search text</code> that will refer to <code>%%FILTER_SEARCHTEXT:prefix_course.fullname:~%%</code></p></li>
</ul>

<h3 id="available-variables">Available variables</h3>

<pre><code>%%CATEGORYID%%
%%COURSEID%%
%%CURRENTUSER%%
%%DEBUG%%
%%FILTER_VAR%%
%%STARTTIME%%’,’%%ENDTIME%%
%%USERID%%
%%WWWROOT%%
</code></pre>

<h3 id="available-filters">Available filters</h3>

<pre><code>%%FILTER_CATEGORIES:
%%FILTER_COURSEMODULEID:
%%FILTER_COURSEMODULEFIELDS:
%%FILTER_COURSEMODULE:
%%FILTER_COURSES:
%%FILTER_COURSEENROLLEDSTUDENTS:
%%FILTER_USERS:
%%FILTER_ROLE:
%%FILTER_SEARCHTEXT:
%%FILTER_SEMESTER:
%%FILTER_STARTTIME:
%%FILTER_ENDTIME:
%%FILTER_SUBCATEGORIES:
%%FILTER_COURSEUSER:
%%FILTER_SYSTEMUSER:
%%FILTER_YEARHEBREW:
%%FILTER_YEARNUMERIC:
</code></pre>

<h2 id="result">Result</h2>

<p>In the <code>view report</code> tab, you will get the 2 filters!</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Consuming a Moodle webservice]]></title>
            <link href="/blog/2017/03/29/consumming-a-moodle-webservice"/>
            <updated>2017-03-29T00:00:00+00:00</updated>
            <id>/blog/2017/03/29/consumming-a-moodle-webservice</id>
            <content type="html"><![CDATA[<p>This post describes how to consume a Moodle core webservice.</p>

<h2 id="set-up-moodle">Set up Moodle</h2>

<h3 id="enable-rest-protocol">Enable REST protocol</h3>

<p>In <code>Dashboard / ► Site administration / ► Plugins / ► Web services / ► Manage protocols</code></p>

<ul>
<li>enable REST protocol.</li>
<li>enable <code>Web services documentation</code> too.</li>
</ul>

<h3 id="create-a-custom-webservice">Create a custom webservice</h3>

<p>In <code>Dashboard / ► Site administration / ► Plugins / ► Web services / ► External services</code></p>

<ul>
<li>add a custom services named <code>test ws</code> for example</li>
</ul>

<h3 id="create-a-custom-user-for-webservice">Create a custom user for webservice</h3>

<p>In <code>Dashboard / ► Site administration / ► Users / ► Accounts / ► Add a new user</code></p>

<ul>
<li>create a <code>wsuser</code> user.</li>
</ul>

<h3 id="create-a-custom-role-for-webservice">Create a custom role for webservice</h3>

<p>In <code>Dashboard / ► Site administration / ► Users / ► Permissions / ► Define roles</code></p>

<ul>
<li>create a <code>ws_user_role</code>.</li>
<li>allow at least <code>Create a web service token</code> </li>
</ul>

<h3 id="assign-role-to-user">Assign role to user</h3>

<p><code>Dashboard / ► Site administration / ► Users / ► Permissions / ► Assign system roles</code></p>

<h2 id="test">Test</h2>

<h3 id="get-a-cool-rest-client">Get a cool REST client</h3>

<p>Getting a user friendly REST client is important, <a href="https://www.getpostman.com/">POSTMAN is pretty cool</a>.</p>

<h3 id="get-a-token">Get a token</h3>

<p>Make a GET request to get a token.</p>

<p>For instance:<code>https://192.168.33.10/login/token.php?service=test_ws&amp;username=wsuser&amp;password=Wsuser123456-</code>. You should get:</p>

<pre><code>        {
          "token": "19f315a127eef1f7f381da40fefd7b75"
        }
</code></pre>

<h3 id="consuming-a-moodle-core-webservice">Consuming a Moodle core webservice</h3>

<p>Now we get a token! So let's consume the <code>core_course_get_courses</code> WS. Results in JSON with <code>moodlewsrestformat=json</code>.</p>

<p>Make a POST request on <code>https://192.168.33.10/webservice/rest/server.php?wstoken=19f315a127eef1f7f381da40fefd7b75&amp;wsfunction=core_course_get_courses&amp;options[ids][0]=1&amp;moodlewsrestformat=json</code>. You should get :</p>

<pre><code>        [
          {
            "id": 1,
            "shortname": "test",
            "categoryid": 0,
            "fullname": "Site de test",
            "summary": "",
            "summaryformat": 1,
            "format": "site",
            "startdate": 0,
            "numsections": 1
          }
        ]
</code></pre>

<h3 id="api-documentation">API DOCUMENTATION</h3>

<p>This can be found at <code>Dashboard / ► Site administration / ► Plugins / ► Web services / ► API Documentation</code></p>
]]></content>
        </entry>
    </feed>